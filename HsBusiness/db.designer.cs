#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HsBusiness
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HsSj")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertApiLog(ApiLog instance);
    partial void UpdateApiLog(ApiLog instance);
    partial void DeleteApiLog(ApiLog instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    partial void InsertBusiness(Business instance);
    partial void UpdateBusiness(Business instance);
    partial void DeleteBusiness(Business instance);
    partial void InsertBusRemind(BusRemind instance);
    partial void UpdateBusRemind(BusRemind instance);
    partial void DeleteBusRemind(BusRemind instance);
    partial void InsertConfig(Config instance);
    partial void UpdateConfig(Config instance);
    partial void DeleteConfig(Config instance);
    partial void InsertContacts(Contacts instance);
    partial void UpdateContacts(Contacts instance);
    partial void DeleteContacts(Contacts instance);
    partial void InsertDic(Dic instance);
    partial void UpdateDic(Dic instance);
    partial void DeleteDic(Dic instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertOperateLog(OperateLog instance);
    partial void UpdateOperateLog(OperateLog instance);
    partial void DeleteOperateLog(OperateLog instance);
    partial void InsertPlContacts(PlContacts instance);
    partial void UpdatePlContacts(PlContacts instance);
    partial void DeletePlContacts(PlContacts instance);
    partial void InsertPlRemind(PlRemind instance);
    partial void UpdatePlRemind(PlRemind instance);
    partial void DeletePlRemind(PlRemind instance);
    partial void InsertPlVisit(PlVisit instance);
    partial void UpdatePlVisit(PlVisit instance);
    partial void DeletePlVisit(PlVisit instance);
    partial void InsertPrivateLine(PrivateLine instance);
    partial void UpdatePrivateLine(PrivateLine instance);
    partial void DeletePrivateLine(PrivateLine instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProRead(ProRead instance);
    partial void UpdateProRead(ProRead instance);
    partial void DeleteProRead(ProRead instance);
    partial void InsertProRemind(ProRemind instance);
    partial void UpdateProRemind(ProRemind instance);
    partial void DeleteProRemind(ProRemind instance);
    partial void InsertProVisit(ProVisit instance);
    partial void UpdateProVisit(ProVisit instance);
    partial void DeleteProVisit(ProVisit instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertReports(Reports instance);
    partial void UpdateReports(Reports instance);
    partial void DeleteReports(Reports instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertRolesMenu(RolesMenu instance);
    partial void UpdateRolesMenu(RolesMenu instance);
    partial void DeleteRolesMenu(RolesMenu instance);
    partial void InsertSmaBaRead(SmaBaRead instance);
    partial void UpdateSmaBaRead(SmaBaRead instance);
    partial void DeleteSmaBaRead(SmaBaRead instance);
    partial void InsertSmaBaRemind(SmaBaRemind instance);
    partial void UpdateSmaBaRemind(SmaBaRemind instance);
    partial void DeleteSmaBaRemind(SmaBaRemind instance);
    partial void InsertSmallBalance(SmallBalance instance);
    partial void UpdateSmallBalance(SmallBalance instance);
    partial void DeleteSmallBalance(SmallBalance instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertStoreRemind(StoreRemind instance);
    partial void UpdateStoreRemind(StoreRemind instance);
    partial void DeleteStoreRemind(StoreRemind instance);
    partial void InsertStoreVisit(StoreVisit instance);
    partial void UpdateStoreVisit(StoreVisit instance);
    partial void DeleteStoreVisit(StoreVisit instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertVersion(Version instance);
    partial void UpdateVersion(Version instance);
    partial void DeleteVersion(Version instance);
    partial void InsertPlInfo(PlInfo instance);
    partial void UpdatePlInfo(PlInfo instance);
    partial void DeletePlInfo(PlInfo instance);
    partial void InsertArrears(Arrears instance);
    partial void UpdateArrears(Arrears instance);
    partial void DeleteArrears(Arrears instance);
    partial void InsertArrRemind(ArrRemind instance);
    partial void UpdateArrRemind(ArrRemind instance);
    partial void DeleteArrRemind(ArrRemind instance);
    partial void InsertArrRead(ArrRead instance);
    partial void UpdateArrRead(ArrRead instance);
    partial void DeleteArrRead(ArrRead instance);
    #endregion
		
		public dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HsSjConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ApiLog> ApiLog
		{
			get
			{
				return this.GetTable<ApiLog>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visit
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
		
		public System.Data.Linq.Table<Business> Business
		{
			get
			{
				return this.GetTable<Business>();
			}
		}
		
		public System.Data.Linq.Table<BusRemind> BusRemind
		{
			get
			{
				return this.GetTable<BusRemind>();
			}
		}
		
		public System.Data.Linq.Table<Config> Config
		{
			get
			{
				return this.GetTable<Config>();
			}
		}
		
		public System.Data.Linq.Table<Contacts> Contacts
		{
			get
			{
				return this.GetTable<Contacts>();
			}
		}
		
		public System.Data.Linq.Table<Dic> Dic
		{
			get
			{
				return this.GetTable<Dic>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menu
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<OperateLog> OperateLog
		{
			get
			{
				return this.GetTable<OperateLog>();
			}
		}
		
		public System.Data.Linq.Table<PlContacts> PlContacts
		{
			get
			{
				return this.GetTable<PlContacts>();
			}
		}
		
		public System.Data.Linq.Table<PlRemind> PlRemind
		{
			get
			{
				return this.GetTable<PlRemind>();
			}
		}
		
		public System.Data.Linq.Table<PlVisit> PlVisit
		{
			get
			{
				return this.GetTable<PlVisit>();
			}
		}
		
		public System.Data.Linq.Table<PrivateLine> PrivateLine
		{
			get
			{
				return this.GetTable<PrivateLine>();
			}
		}
		
		public System.Data.Linq.Table<Project> Project
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProRead> ProRead
		{
			get
			{
				return this.GetTable<ProRead>();
			}
		}
		
		public System.Data.Linq.Table<ProRemind> ProRemind
		{
			get
			{
				return this.GetTable<ProRemind>();
			}
		}
		
		public System.Data.Linq.Table<ProVisit> ProVisit
		{
			get
			{
				return this.GetTable<ProVisit>();
			}
		}
		
		public System.Data.Linq.Table<Region> Region
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Reports> Reports
		{
			get
			{
				return this.GetTable<Reports>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<RolesMenu> RolesMenu
		{
			get
			{
				return this.GetTable<RolesMenu>();
			}
		}
		
		public System.Data.Linq.Table<SmaBaRead> SmaBaRead
		{
			get
			{
				return this.GetTable<SmaBaRead>();
			}
		}
		
		public System.Data.Linq.Table<SmaBaRemind> SmaBaRemind
		{
			get
			{
				return this.GetTable<SmaBaRemind>();
			}
		}
		
		public System.Data.Linq.Table<SmallBalance> SmallBalance
		{
			get
			{
				return this.GetTable<SmallBalance>();
			}
		}
		
		public System.Data.Linq.Table<Store> Store
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<StoreRemind> StoreRemind
		{
			get
			{
				return this.GetTable<StoreRemind>();
			}
		}
		
		public System.Data.Linq.Table<StoreVisit> StoreVisit
		{
			get
			{
				return this.GetTable<StoreVisit>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Version> Version
		{
			get
			{
				return this.GetTable<Version>();
			}
		}
		
		public System.Data.Linq.Table<VPLVisitNum> VPLVisitNum
		{
			get
			{
				return this.GetTable<VPLVisitNum>();
			}
		}
		
		public System.Data.Linq.Table<VVisitNum> VVisitNum
		{
			get
			{
				return this.GetTable<VVisitNum>();
			}
		}
		
		public System.Data.Linq.Table<PlInfo> PlInfo
		{
			get
			{
				return this.GetTable<PlInfo>();
			}
		}
		
		public System.Data.Linq.Table<Arrears> Arrears
		{
			get
			{
				return this.GetTable<Arrears>();
			}
		}
		
		public System.Data.Linq.Table<ArrRemind> ArrRemind
		{
			get
			{
				return this.GetTable<ArrRemind>();
			}
		}
		
		public System.Data.Linq.Table<ArrRead> ArrRead
		{
			get
			{
				return this.GetTable<ArrRead>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiLog")]
	public partial class ApiLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RequestName;
		
		private string _Parameters;
		
		private System.Nullable<int> _Code;
		
		private string _ErrMsg;
		
		private System.Nullable<int> _ClientType;
		
		private System.Nullable<int> _UserID;
		
		private string _AddTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestNameChanging(string value);
    partial void OnRequestNameChanged();
    partial void OnParametersChanging(string value);
    partial void OnParametersChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnErrMsgChanging(string value);
    partial void OnErrMsgChanged();
    partial void OnClientTypeChanging(System.Nullable<int> value);
    partial void OnClientTypeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    #endregion
		
		public ApiLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestName", DbType="NVarChar(50)")]
		public string RequestName
		{
			get
			{
				return this._RequestName;
			}
			set
			{
				if ((this._RequestName != value))
				{
					this.OnRequestNameChanging(value);
					this.SendPropertyChanging();
					this._RequestName = value;
					this.SendPropertyChanged("RequestName");
					this.OnRequestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="NVarChar(MAX)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this.OnParametersChanging(value);
					this.SendPropertyChanging();
					this._Parameters = value;
					this.SendPropertyChanged("Parameters");
					this.OnParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrMsg", DbType="NVarChar(MAX)")]
		public string ErrMsg
		{
			get
			{
				return this._ErrMsg;
			}
			set
			{
				if ((this._ErrMsg != value))
				{
					this.OnErrMsgChanging(value);
					this.SendPropertyChanging();
					this._ErrMsg = value;
					this.SendPropertyChanged("ErrMsg");
					this.OnErrMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="Int")]
		public System.Nullable<int> ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visit")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IsNeed;
		
		private System.Nullable<int> _IsAgain;
		
		private string _NextTime;
		
		private System.Nullable<int> _BusID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _State;
		
		private string _VisitTime;
		
		private string _VisitContent;
		
		private string _Img;
		
		private System.Nullable<int> _IsLeader;
		
		private string _Leader;
		
		private string _AddTime;
		
		private EntitySet<BusRemind> _BusRemind;
		
		private EntityRef<Business> _Business;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsNeedChanging(System.Nullable<int> value);
    partial void OnIsNeedChanged();
    partial void OnIsAgainChanging(System.Nullable<int> value);
    partial void OnIsAgainChanged();
    partial void OnNextTimeChanging(string value);
    partial void OnNextTimeChanged();
    partial void OnBusIDChanging(System.Nullable<int> value);
    partial void OnBusIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnVisitTimeChanging(string value);
    partial void OnVisitTimeChanged();
    partial void OnVisitContentChanging(string value);
    partial void OnVisitContentChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnIsLeaderChanging(System.Nullable<int> value);
    partial void OnIsLeaderChanged();
    partial void OnLeaderChanging(string value);
    partial void OnLeaderChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    #endregion
		
		public Visit()
		{
			this._BusRemind = new EntitySet<BusRemind>(new Action<BusRemind>(this.attach_BusRemind), new Action<BusRemind>(this.detach_BusRemind));
			this._Business = default(EntityRef<Business>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeed", DbType="Int")]
		public System.Nullable<int> IsNeed
		{
			get
			{
				return this._IsNeed;
			}
			set
			{
				if ((this._IsNeed != value))
				{
					this.OnIsNeedChanging(value);
					this.SendPropertyChanging();
					this._IsNeed = value;
					this.SendPropertyChanged("IsNeed");
					this.OnIsNeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgain", DbType="Int")]
		public System.Nullable<int> IsAgain
		{
			get
			{
				return this._IsAgain;
			}
			set
			{
				if ((this._IsAgain != value))
				{
					this.OnIsAgainChanging(value);
					this.SendPropertyChanging();
					this._IsAgain = value;
					this.SendPropertyChanged("IsAgain");
					this.OnIsAgainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextTime", DbType="NVarChar(50)")]
		public string NextTime
		{
			get
			{
				return this._NextTime;
			}
			set
			{
				if ((this._NextTime != value))
				{
					this.OnNextTimeChanging(value);
					this.SendPropertyChanging();
					this._NextTime = value;
					this.SendPropertyChanged("NextTime");
					this.OnNextTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusID", DbType="Int")]
		public System.Nullable<int> BusID
		{
			get
			{
				return this._BusID;
			}
			set
			{
				if ((this._BusID != value))
				{
					if (this._Business.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusIDChanging(value);
					this.SendPropertyChanging();
					this._BusID = value;
					this.SendPropertyChanged("BusID");
					this.OnBusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTime", DbType="NVarChar(50)")]
		public string VisitTime
		{
			get
			{
				return this._VisitTime;
			}
			set
			{
				if ((this._VisitTime != value))
				{
					this.OnVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._VisitTime = value;
					this.SendPropertyChanged("VisitTime");
					this.OnVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitContent", DbType="NVarChar(MAX)")]
		public string VisitContent
		{
			get
			{
				return this._VisitContent;
			}
			set
			{
				if ((this._VisitContent != value))
				{
					this.OnVisitContentChanging(value);
					this.SendPropertyChanging();
					this._VisitContent = value;
					this.SendPropertyChanged("VisitContent");
					this.OnVisitContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="NVarChar(MAX)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeader", DbType="Int")]
		public System.Nullable<int> IsLeader
		{
			get
			{
				return this._IsLeader;
			}
			set
			{
				if ((this._IsLeader != value))
				{
					this.OnIsLeaderChanging(value);
					this.SendPropertyChanging();
					this._IsLeader = value;
					this.SendPropertyChanged("IsLeader");
					this.OnIsLeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leader", DbType="NVarChar(50)")]
		public string Leader
		{
			get
			{
				return this._Leader;
			}
			set
			{
				if ((this._Leader != value))
				{
					this.OnLeaderChanging(value);
					this.SendPropertyChanging();
					this._Leader = value;
					this.SendPropertyChanged("Leader");
					this.OnLeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_BusRemind", Storage="_BusRemind", ThisKey="ID", OtherKey="VisitID")]
		public EntitySet<BusRemind> BusRemind
		{
			get
			{
				return this._BusRemind;
			}
			set
			{
				this._BusRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_Visit", Storage="_Business", ThisKey="BusID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Business Business
		{
			get
			{
				return this._Business.Entity;
			}
			set
			{
				Business previousValue = this._Business.Entity;
				if (((previousValue != value) 
							|| (this._Business.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Business.Entity = null;
						previousValue.Visit.Remove(this);
					}
					this._Business.Entity = value;
					if ((value != null))
					{
						value.Visit.Add(this);
						this._BusID = value.ID;
					}
					else
					{
						this._BusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Business");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Visit", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Visit.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Visit.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusRemind(BusRemind entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_BusRemind(BusRemind entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Business")]
	public partial class Business : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CompanyName;
		
		private string _Areas;
		
		private string _Industry;
		
		private string _CustomerScale;
		
		private System.Nullable<int> _Levels;
		
		private string _AddTime;
		
		private System.Nullable<bool> _IsMove;
		
		private string _MCardUse;
		
		private string _MPushWork;
		
		private string _MOperator;
		
		private string _MRatio;
		
		private string _MAgeGroup;
		
		private string _MIsSubsidy;
		
		private string _MQuota;
		
		private string _MRange;
		
		private string _MPolicy;
		
		private string _MOverTime;
		
		private string _MMonthFee;
		
		private string _MFocus;
		
		private string _MIncome;
		
		private string _MOtherWork;
		
		private System.Nullable<bool> _IsFixed;
		
		private string _FPushWork;
		
		private string _FScale;
		
		private string _FBandWidth;
		
		private System.Nullable<int> _FIsDomain;
		
		private string _FPreWeekPrice;
		
		private string _FPreInNetMouth;
		
		private string _FPreAnlIncome;
		
		private string _FOperator;
		
		private string _FUseWork;
		
		private string _FUseScale;
		
		private string _FUseBandWidth;
		
		private string _FWeekPrice;
		
		private string _FOverTime;
		
		private string _FAlsAnlIncome;
		
		private string _FComputerNum;
		
		private string _FIsSatisfy;
		
		private System.Nullable<int> _FIsServer;
		
		private string _FPlatform;
		
		private string _FOtherWork;
		
		private System.Nullable<int> _UserID;
		
		private string _Remark;
		
		private System.Nullable<int> _MState;
		
		private System.Nullable<int> _FState;
		
		private string _LastTime;
		
		private System.Nullable<int> _IsRead;
		
		private string _CompanyAddress;
		
		private System.Nullable<int> _IsHavePhoneList;
		
		private string _MUnicom;
		
		private string _MMobile;
		
		private string _MTelecom;
		
		private EntitySet<Visit> _Visit;
		
		private EntitySet<BusRemind> _BusRemind;
		
		private EntitySet<Contacts> _Contacts;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnAreasChanging(string value);
    partial void OnAreasChanged();
    partial void OnIndustryChanging(string value);
    partial void OnIndustryChanged();
    partial void OnCustomerScaleChanging(string value);
    partial void OnCustomerScaleChanged();
    partial void OnLevelsChanging(System.Nullable<int> value);
    partial void OnLevelsChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnIsMoveChanging(System.Nullable<bool> value);
    partial void OnIsMoveChanged();
    partial void OnMCardUseChanging(string value);
    partial void OnMCardUseChanged();
    partial void OnMPushWorkChanging(string value);
    partial void OnMPushWorkChanged();
    partial void OnMOperatorChanging(string value);
    partial void OnMOperatorChanged();
    partial void OnMRatioChanging(string value);
    partial void OnMRatioChanged();
    partial void OnMAgeGroupChanging(string value);
    partial void OnMAgeGroupChanged();
    partial void OnMIsSubsidyChanging(string value);
    partial void OnMIsSubsidyChanged();
    partial void OnMQuotaChanging(string value);
    partial void OnMQuotaChanged();
    partial void OnMRangeChanging(string value);
    partial void OnMRangeChanged();
    partial void OnMPolicyChanging(string value);
    partial void OnMPolicyChanged();
    partial void OnMOverTimeChanging(string value);
    partial void OnMOverTimeChanged();
    partial void OnMMonthFeeChanging(string value);
    partial void OnMMonthFeeChanged();
    partial void OnMFocusChanging(string value);
    partial void OnMFocusChanged();
    partial void OnMIncomeChanging(string value);
    partial void OnMIncomeChanged();
    partial void OnMOtherWorkChanging(string value);
    partial void OnMOtherWorkChanged();
    partial void OnIsFixedChanging(System.Nullable<bool> value);
    partial void OnIsFixedChanged();
    partial void OnFPushWorkChanging(string value);
    partial void OnFPushWorkChanged();
    partial void OnFScaleChanging(string value);
    partial void OnFScaleChanged();
    partial void OnFBandWidthChanging(string value);
    partial void OnFBandWidthChanged();
    partial void OnFIsDomainChanging(System.Nullable<int> value);
    partial void OnFIsDomainChanged();
    partial void OnFPreWeekPriceChanging(string value);
    partial void OnFPreWeekPriceChanged();
    partial void OnFPreInNetMouthChanging(string value);
    partial void OnFPreInNetMouthChanged();
    partial void OnFPreAnlIncomeChanging(string value);
    partial void OnFPreAnlIncomeChanged();
    partial void OnFOperatorChanging(string value);
    partial void OnFOperatorChanged();
    partial void OnFUseWorkChanging(string value);
    partial void OnFUseWorkChanged();
    partial void OnFUseScaleChanging(string value);
    partial void OnFUseScaleChanged();
    partial void OnFUseBandWidthChanging(string value);
    partial void OnFUseBandWidthChanged();
    partial void OnFWeekPriceChanging(string value);
    partial void OnFWeekPriceChanged();
    partial void OnFOverTimeChanging(string value);
    partial void OnFOverTimeChanged();
    partial void OnFAlsAnlIncomeChanging(string value);
    partial void OnFAlsAnlIncomeChanged();
    partial void OnFComputerNumChanging(string value);
    partial void OnFComputerNumChanged();
    partial void OnFIsSatisfyChanging(string value);
    partial void OnFIsSatisfyChanged();
    partial void OnFIsServerChanging(System.Nullable<int> value);
    partial void OnFIsServerChanged();
    partial void OnFPlatformChanging(string value);
    partial void OnFPlatformChanged();
    partial void OnFOtherWorkChanging(string value);
    partial void OnFOtherWorkChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnMStateChanging(System.Nullable<int> value);
    partial void OnMStateChanged();
    partial void OnFStateChanging(System.Nullable<int> value);
    partial void OnFStateChanged();
    partial void OnLastTimeChanging(string value);
    partial void OnLastTimeChanged();
    partial void OnIsReadChanging(System.Nullable<int> value);
    partial void OnIsReadChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnIsHavePhoneListChanging(System.Nullable<int> value);
    partial void OnIsHavePhoneListChanged();
    partial void OnMUnicomChanging(string value);
    partial void OnMUnicomChanged();
    partial void OnMMobileChanging(string value);
    partial void OnMMobileChanged();
    partial void OnMTelecomChanging(string value);
    partial void OnMTelecomChanged();
    #endregion
		
		public Business()
		{
			this._Visit = new EntitySet<Visit>(new Action<Visit>(this.attach_Visit), new Action<Visit>(this.detach_Visit));
			this._BusRemind = new EntitySet<BusRemind>(new Action<BusRemind>(this.attach_BusRemind), new Action<BusRemind>(this.detach_BusRemind));
			this._Contacts = new EntitySet<Contacts>(new Action<Contacts>(this.attach_Contacts), new Action<Contacts>(this.detach_Contacts));
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Areas", DbType="NVarChar(50)")]
		public string Areas
		{
			get
			{
				return this._Areas;
			}
			set
			{
				if ((this._Areas != value))
				{
					this.OnAreasChanging(value);
					this.SendPropertyChanging();
					this._Areas = value;
					this.SendPropertyChanged("Areas");
					this.OnAreasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Industry", DbType="NVarChar(50)")]
		public string Industry
		{
			get
			{
				return this._Industry;
			}
			set
			{
				if ((this._Industry != value))
				{
					this.OnIndustryChanging(value);
					this.SendPropertyChanging();
					this._Industry = value;
					this.SendPropertyChanged("Industry");
					this.OnIndustryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerScale", DbType="NVarChar(50)")]
		public string CustomerScale
		{
			get
			{
				return this._CustomerScale;
			}
			set
			{
				if ((this._CustomerScale != value))
				{
					this.OnCustomerScaleChanging(value);
					this.SendPropertyChanging();
					this._CustomerScale = value;
					this.SendPropertyChanged("CustomerScale");
					this.OnCustomerScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Levels", DbType="Int")]
		public System.Nullable<int> Levels
		{
			get
			{
				return this._Levels;
			}
			set
			{
				if ((this._Levels != value))
				{
					this.OnLevelsChanging(value);
					this.SendPropertyChanging();
					this._Levels = value;
					this.SendPropertyChanged("Levels");
					this.OnLevelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMove", DbType="Bit")]
		public System.Nullable<bool> IsMove
		{
			get
			{
				return this._IsMove;
			}
			set
			{
				if ((this._IsMove != value))
				{
					this.OnIsMoveChanging(value);
					this.SendPropertyChanging();
					this._IsMove = value;
					this.SendPropertyChanged("IsMove");
					this.OnIsMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCardUse", DbType="NVarChar(50)")]
		public string MCardUse
		{
			get
			{
				return this._MCardUse;
			}
			set
			{
				if ((this._MCardUse != value))
				{
					this.OnMCardUseChanging(value);
					this.SendPropertyChanging();
					this._MCardUse = value;
					this.SendPropertyChanged("MCardUse");
					this.OnMCardUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPushWork", DbType="NVarChar(50)")]
		public string MPushWork
		{
			get
			{
				return this._MPushWork;
			}
			set
			{
				if ((this._MPushWork != value))
				{
					this.OnMPushWorkChanging(value);
					this.SendPropertyChanging();
					this._MPushWork = value;
					this.SendPropertyChanged("MPushWork");
					this.OnMPushWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOperator", DbType="NVarChar(50)")]
		public string MOperator
		{
			get
			{
				return this._MOperator;
			}
			set
			{
				if ((this._MOperator != value))
				{
					this.OnMOperatorChanging(value);
					this.SendPropertyChanging();
					this._MOperator = value;
					this.SendPropertyChanged("MOperator");
					this.OnMOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRatio", DbType="NVarChar(50)")]
		public string MRatio
		{
			get
			{
				return this._MRatio;
			}
			set
			{
				if ((this._MRatio != value))
				{
					this.OnMRatioChanging(value);
					this.SendPropertyChanging();
					this._MRatio = value;
					this.SendPropertyChanged("MRatio");
					this.OnMRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAgeGroup", DbType="NVarChar(50)")]
		public string MAgeGroup
		{
			get
			{
				return this._MAgeGroup;
			}
			set
			{
				if ((this._MAgeGroup != value))
				{
					this.OnMAgeGroupChanging(value);
					this.SendPropertyChanging();
					this._MAgeGroup = value;
					this.SendPropertyChanged("MAgeGroup");
					this.OnMAgeGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIsSubsidy", DbType="NVarChar(50)")]
		public string MIsSubsidy
		{
			get
			{
				return this._MIsSubsidy;
			}
			set
			{
				if ((this._MIsSubsidy != value))
				{
					this.OnMIsSubsidyChanging(value);
					this.SendPropertyChanging();
					this._MIsSubsidy = value;
					this.SendPropertyChanged("MIsSubsidy");
					this.OnMIsSubsidyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MQuota", DbType="NVarChar(50)")]
		public string MQuota
		{
			get
			{
				return this._MQuota;
			}
			set
			{
				if ((this._MQuota != value))
				{
					this.OnMQuotaChanging(value);
					this.SendPropertyChanging();
					this._MQuota = value;
					this.SendPropertyChanged("MQuota");
					this.OnMQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRange", DbType="NVarChar(50)")]
		public string MRange
		{
			get
			{
				return this._MRange;
			}
			set
			{
				if ((this._MRange != value))
				{
					this.OnMRangeChanging(value);
					this.SendPropertyChanging();
					this._MRange = value;
					this.SendPropertyChanged("MRange");
					this.OnMRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPolicy", DbType="NVarChar(50)")]
		public string MPolicy
		{
			get
			{
				return this._MPolicy;
			}
			set
			{
				if ((this._MPolicy != value))
				{
					this.OnMPolicyChanging(value);
					this.SendPropertyChanging();
					this._MPolicy = value;
					this.SendPropertyChanged("MPolicy");
					this.OnMPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOverTime", DbType="NVarChar(50)")]
		public string MOverTime
		{
			get
			{
				return this._MOverTime;
			}
			set
			{
				if ((this._MOverTime != value))
				{
					this.OnMOverTimeChanging(value);
					this.SendPropertyChanging();
					this._MOverTime = value;
					this.SendPropertyChanged("MOverTime");
					this.OnMOverTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MMonthFee", DbType="NVarChar(50)")]
		public string MMonthFee
		{
			get
			{
				return this._MMonthFee;
			}
			set
			{
				if ((this._MMonthFee != value))
				{
					this.OnMMonthFeeChanging(value);
					this.SendPropertyChanging();
					this._MMonthFee = value;
					this.SendPropertyChanged("MMonthFee");
					this.OnMMonthFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MFocus", DbType="NVarChar(50)")]
		public string MFocus
		{
			get
			{
				return this._MFocus;
			}
			set
			{
				if ((this._MFocus != value))
				{
					this.OnMFocusChanging(value);
					this.SendPropertyChanging();
					this._MFocus = value;
					this.SendPropertyChanged("MFocus");
					this.OnMFocusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIncome", DbType="NVarChar(50)")]
		public string MIncome
		{
			get
			{
				return this._MIncome;
			}
			set
			{
				if ((this._MIncome != value))
				{
					this.OnMIncomeChanging(value);
					this.SendPropertyChanging();
					this._MIncome = value;
					this.SendPropertyChanged("MIncome");
					this.OnMIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOtherWork", DbType="NVarChar(50)")]
		public string MOtherWork
		{
			get
			{
				return this._MOtherWork;
			}
			set
			{
				if ((this._MOtherWork != value))
				{
					this.OnMOtherWorkChanging(value);
					this.SendPropertyChanging();
					this._MOtherWork = value;
					this.SendPropertyChanged("MOtherWork");
					this.OnMOtherWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFixed", DbType="Bit")]
		public System.Nullable<bool> IsFixed
		{
			get
			{
				return this._IsFixed;
			}
			set
			{
				if ((this._IsFixed != value))
				{
					this.OnIsFixedChanging(value);
					this.SendPropertyChanging();
					this._IsFixed = value;
					this.SendPropertyChanged("IsFixed");
					this.OnIsFixedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPushWork", DbType="NVarChar(50)")]
		public string FPushWork
		{
			get
			{
				return this._FPushWork;
			}
			set
			{
				if ((this._FPushWork != value))
				{
					this.OnFPushWorkChanging(value);
					this.SendPropertyChanging();
					this._FPushWork = value;
					this.SendPropertyChanged("FPushWork");
					this.OnFPushWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FScale", DbType="NVarChar(50)")]
		public string FScale
		{
			get
			{
				return this._FScale;
			}
			set
			{
				if ((this._FScale != value))
				{
					this.OnFScaleChanging(value);
					this.SendPropertyChanging();
					this._FScale = value;
					this.SendPropertyChanged("FScale");
					this.OnFScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBandWidth", DbType="NVarChar(50)")]
		public string FBandWidth
		{
			get
			{
				return this._FBandWidth;
			}
			set
			{
				if ((this._FBandWidth != value))
				{
					this.OnFBandWidthChanging(value);
					this.SendPropertyChanging();
					this._FBandWidth = value;
					this.SendPropertyChanged("FBandWidth");
					this.OnFBandWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIsDomain", DbType="Int")]
		public System.Nullable<int> FIsDomain
		{
			get
			{
				return this._FIsDomain;
			}
			set
			{
				if ((this._FIsDomain != value))
				{
					this.OnFIsDomainChanging(value);
					this.SendPropertyChanging();
					this._FIsDomain = value;
					this.SendPropertyChanged("FIsDomain");
					this.OnFIsDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPreWeekPrice", DbType="NVarChar(50)")]
		public string FPreWeekPrice
		{
			get
			{
				return this._FPreWeekPrice;
			}
			set
			{
				if ((this._FPreWeekPrice != value))
				{
					this.OnFPreWeekPriceChanging(value);
					this.SendPropertyChanging();
					this._FPreWeekPrice = value;
					this.SendPropertyChanged("FPreWeekPrice");
					this.OnFPreWeekPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPreInNetMouth", DbType="NVarChar(50)")]
		public string FPreInNetMouth
		{
			get
			{
				return this._FPreInNetMouth;
			}
			set
			{
				if ((this._FPreInNetMouth != value))
				{
					this.OnFPreInNetMouthChanging(value);
					this.SendPropertyChanging();
					this._FPreInNetMouth = value;
					this.SendPropertyChanged("FPreInNetMouth");
					this.OnFPreInNetMouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPreAnlIncome", DbType="NVarChar(50)")]
		public string FPreAnlIncome
		{
			get
			{
				return this._FPreAnlIncome;
			}
			set
			{
				if ((this._FPreAnlIncome != value))
				{
					this.OnFPreAnlIncomeChanging(value);
					this.SendPropertyChanging();
					this._FPreAnlIncome = value;
					this.SendPropertyChanged("FPreAnlIncome");
					this.OnFPreAnlIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOperator", DbType="NVarChar(50)")]
		public string FOperator
		{
			get
			{
				return this._FOperator;
			}
			set
			{
				if ((this._FOperator != value))
				{
					this.OnFOperatorChanging(value);
					this.SendPropertyChanging();
					this._FOperator = value;
					this.SendPropertyChanged("FOperator");
					this.OnFOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUseWork", DbType="NVarChar(50)")]
		public string FUseWork
		{
			get
			{
				return this._FUseWork;
			}
			set
			{
				if ((this._FUseWork != value))
				{
					this.OnFUseWorkChanging(value);
					this.SendPropertyChanging();
					this._FUseWork = value;
					this.SendPropertyChanged("FUseWork");
					this.OnFUseWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUseScale", DbType="NVarChar(50)")]
		public string FUseScale
		{
			get
			{
				return this._FUseScale;
			}
			set
			{
				if ((this._FUseScale != value))
				{
					this.OnFUseScaleChanging(value);
					this.SendPropertyChanging();
					this._FUseScale = value;
					this.SendPropertyChanged("FUseScale");
					this.OnFUseScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUseBandWidth", DbType="NVarChar(50)")]
		public string FUseBandWidth
		{
			get
			{
				return this._FUseBandWidth;
			}
			set
			{
				if ((this._FUseBandWidth != value))
				{
					this.OnFUseBandWidthChanging(value);
					this.SendPropertyChanging();
					this._FUseBandWidth = value;
					this.SendPropertyChanged("FUseBandWidth");
					this.OnFUseBandWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FWeekPrice", DbType="NVarChar(50)")]
		public string FWeekPrice
		{
			get
			{
				return this._FWeekPrice;
			}
			set
			{
				if ((this._FWeekPrice != value))
				{
					this.OnFWeekPriceChanging(value);
					this.SendPropertyChanging();
					this._FWeekPrice = value;
					this.SendPropertyChanged("FWeekPrice");
					this.OnFWeekPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOverTime", DbType="NVarChar(50)")]
		public string FOverTime
		{
			get
			{
				return this._FOverTime;
			}
			set
			{
				if ((this._FOverTime != value))
				{
					this.OnFOverTimeChanging(value);
					this.SendPropertyChanging();
					this._FOverTime = value;
					this.SendPropertyChanged("FOverTime");
					this.OnFOverTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAlsAnlIncome", DbType="NVarChar(50)")]
		public string FAlsAnlIncome
		{
			get
			{
				return this._FAlsAnlIncome;
			}
			set
			{
				if ((this._FAlsAnlIncome != value))
				{
					this.OnFAlsAnlIncomeChanging(value);
					this.SendPropertyChanging();
					this._FAlsAnlIncome = value;
					this.SendPropertyChanged("FAlsAnlIncome");
					this.OnFAlsAnlIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FComputerNum", DbType="NVarChar(50)")]
		public string FComputerNum
		{
			get
			{
				return this._FComputerNum;
			}
			set
			{
				if ((this._FComputerNum != value))
				{
					this.OnFComputerNumChanging(value);
					this.SendPropertyChanging();
					this._FComputerNum = value;
					this.SendPropertyChanged("FComputerNum");
					this.OnFComputerNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIsSatisfy", DbType="NVarChar(50)")]
		public string FIsSatisfy
		{
			get
			{
				return this._FIsSatisfy;
			}
			set
			{
				if ((this._FIsSatisfy != value))
				{
					this.OnFIsSatisfyChanging(value);
					this.SendPropertyChanging();
					this._FIsSatisfy = value;
					this.SendPropertyChanged("FIsSatisfy");
					this.OnFIsSatisfyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIsServer", DbType="Int")]
		public System.Nullable<int> FIsServer
		{
			get
			{
				return this._FIsServer;
			}
			set
			{
				if ((this._FIsServer != value))
				{
					this.OnFIsServerChanging(value);
					this.SendPropertyChanging();
					this._FIsServer = value;
					this.SendPropertyChanged("FIsServer");
					this.OnFIsServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPlatform", DbType="NVarChar(50)")]
		public string FPlatform
		{
			get
			{
				return this._FPlatform;
			}
			set
			{
				if ((this._FPlatform != value))
				{
					this.OnFPlatformChanging(value);
					this.SendPropertyChanging();
					this._FPlatform = value;
					this.SendPropertyChanged("FPlatform");
					this.OnFPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOtherWork", DbType="NVarChar(50)")]
		public string FOtherWork
		{
			get
			{
				return this._FOtherWork;
			}
			set
			{
				if ((this._FOtherWork != value))
				{
					this.OnFOtherWorkChanging(value);
					this.SendPropertyChanging();
					this._FOtherWork = value;
					this.SendPropertyChanged("FOtherWork");
					this.OnFOtherWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MState", DbType="Int")]
		public System.Nullable<int> MState
		{
			get
			{
				return this._MState;
			}
			set
			{
				if ((this._MState != value))
				{
					this.OnMStateChanging(value);
					this.SendPropertyChanging();
					this._MState = value;
					this.SendPropertyChanged("MState");
					this.OnMStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FState", DbType="Int")]
		public System.Nullable<int> FState
		{
			get
			{
				return this._FState;
			}
			set
			{
				if ((this._FState != value))
				{
					this.OnFStateChanging(value);
					this.SendPropertyChanging();
					this._FState = value;
					this.SendPropertyChanged("FState");
					this.OnFStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTime", DbType="NVarChar(50)")]
		public string LastTime
		{
			get
			{
				return this._LastTime;
			}
			set
			{
				if ((this._LastTime != value))
				{
					this.OnLastTimeChanging(value);
					this.SendPropertyChanging();
					this._LastTime = value;
					this.SendPropertyChanged("LastTime");
					this.OnLastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Int")]
		public System.Nullable<int> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(50)")]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHavePhoneList", DbType="Int")]
		public System.Nullable<int> IsHavePhoneList
		{
			get
			{
				return this._IsHavePhoneList;
			}
			set
			{
				if ((this._IsHavePhoneList != value))
				{
					this.OnIsHavePhoneListChanging(value);
					this.SendPropertyChanging();
					this._IsHavePhoneList = value;
					this.SendPropertyChanged("IsHavePhoneList");
					this.OnIsHavePhoneListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUnicom", DbType="NVarChar(50)")]
		public string MUnicom
		{
			get
			{
				return this._MUnicom;
			}
			set
			{
				if ((this._MUnicom != value))
				{
					this.OnMUnicomChanging(value);
					this.SendPropertyChanging();
					this._MUnicom = value;
					this.SendPropertyChanged("MUnicom");
					this.OnMUnicomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MMobile", DbType="NVarChar(50)")]
		public string MMobile
		{
			get
			{
				return this._MMobile;
			}
			set
			{
				if ((this._MMobile != value))
				{
					this.OnMMobileChanging(value);
					this.SendPropertyChanging();
					this._MMobile = value;
					this.SendPropertyChanged("MMobile");
					this.OnMMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTelecom", DbType="NVarChar(50)")]
		public string MTelecom
		{
			get
			{
				return this._MTelecom;
			}
			set
			{
				if ((this._MTelecom != value))
				{
					this.OnMTelecomChanging(value);
					this.SendPropertyChanging();
					this._MTelecom = value;
					this.SendPropertyChanged("MTelecom");
					this.OnMTelecomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_Visit", Storage="_Visit", ThisKey="ID", OtherKey="BusID")]
		public EntitySet<Visit> Visit
		{
			get
			{
				return this._Visit;
			}
			set
			{
				this._Visit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_BusRemind", Storage="_BusRemind", ThisKey="ID", OtherKey="BusID")]
		public EntitySet<BusRemind> BusRemind
		{
			get
			{
				return this._BusRemind;
			}
			set
			{
				this._BusRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_Contacts", Storage="_Contacts", ThisKey="ID", OtherKey="BusID")]
		public EntitySet<Contacts> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Business", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Business.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Business.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visit(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Business = this;
		}
		
		private void detach_Visit(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Business = null;
		}
		
		private void attach_BusRemind(BusRemind entity)
		{
			this.SendPropertyChanging();
			entity.Business = this;
		}
		
		private void detach_BusRemind(BusRemind entity)
		{
			this.SendPropertyChanging();
			entity.Business = null;
		}
		
		private void attach_Contacts(Contacts entity)
		{
			this.SendPropertyChanging();
			entity.Business = this;
		}
		
		private void detach_Contacts(Contacts entity)
		{
			this.SendPropertyChanging();
			entity.Business = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusRemind")]
	public partial class BusRemind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BusID;
		
		private string _Contents;
		
		private System.Nullable<int> _Type;
		
		private string _AddTime;
		
		private System.Nullable<int> _IsRead;
		
		private System.Nullable<int> _UserID;
		
		private string _ReceiptTime;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _VisitID;
		
		private EntityRef<Business> _Business;
		
		private EntityRef<Visit> _Visit;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBusIDChanging(System.Nullable<int> value);
    partial void OnBusIDChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnIsReadChanging(System.Nullable<int> value);
    partial void OnIsReadChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnReceiptTimeChanging(string value);
    partial void OnReceiptTimeChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnVisitIDChanging(System.Nullable<int> value);
    partial void OnVisitIDChanged();
    #endregion
		
		public BusRemind()
		{
			this._Business = default(EntityRef<Business>);
			this._Visit = default(EntityRef<Visit>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusID", DbType="Int")]
		public System.Nullable<int> BusID
		{
			get
			{
				return this._BusID;
			}
			set
			{
				if ((this._BusID != value))
				{
					if (this._Business.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusIDChanging(value);
					this.SendPropertyChanging();
					this._BusID = value;
					this.SendPropertyChanged("BusID");
					this.OnBusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Int")]
		public System.Nullable<int> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTime", DbType="NVarChar(50)")]
		public string ReceiptTime
		{
			get
			{
				return this._ReceiptTime;
			}
			set
			{
				if ((this._ReceiptTime != value))
				{
					this.OnReceiptTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTime = value;
					this.SendPropertyChanged("ReceiptTime");
					this.OnReceiptTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="Int")]
		public System.Nullable<int> VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_BusRemind", Storage="_Business", ThisKey="BusID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Business Business
		{
			get
			{
				return this._Business.Entity;
			}
			set
			{
				Business previousValue = this._Business.Entity;
				if (((previousValue != value) 
							|| (this._Business.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Business.Entity = null;
						previousValue.BusRemind.Remove(this);
					}
					this._Business.Entity = value;
					if ((value != null))
					{
						value.BusRemind.Add(this);
						this._BusID = value.ID;
					}
					else
					{
						this._BusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Business");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_BusRemind", Storage="_Visit", ThisKey="VisitID", OtherKey="ID", IsForeignKey=true)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.BusRemind.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.BusRemind.Add(this);
						this._VisitID = value.ID;
					}
					else
					{
						this._VisitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_BusRemind", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.BusRemind.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.BusRemind.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Config")]
	public partial class Config : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Numerical;
		
		private string _EnlishName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumericalChanging(string value);
    partial void OnNumericalChanged();
    partial void OnEnlishNameChanging(string value);
    partial void OnEnlishNameChanged();
    #endregion
		
		public Config()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numerical", DbType="NVarChar(50)")]
		public string Numerical
		{
			get
			{
				return this._Numerical;
			}
			set
			{
				if ((this._Numerical != value))
				{
					this.OnNumericalChanging(value);
					this.SendPropertyChanging();
					this._Numerical = value;
					this.SendPropertyChanged("Numerical");
					this.OnNumericalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnlishName", DbType="NVarChar(50)")]
		public string EnlishName
		{
			get
			{
				return this._EnlishName;
			}
			set
			{
				if ((this._EnlishName != value))
				{
					this.OnEnlishNameChanging(value);
					this.SendPropertyChanging();
					this._EnlishName = value;
					this.SendPropertyChanged("EnlishName");
					this.OnEnlishNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Post;
		
		private string _Tel;
		
		private System.Nullable<int> _BusID;
		
		private EntityRef<Business> _Business;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnBusIDChanging(System.Nullable<int> value);
    partial void OnBusIDChanged();
    #endregion
		
		public Contacts()
		{
			this._Business = default(EntityRef<Business>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(50)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusID", DbType="Int")]
		public System.Nullable<int> BusID
		{
			get
			{
				return this._BusID;
			}
			set
			{
				if ((this._BusID != value))
				{
					if (this._Business.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusIDChanging(value);
					this.SendPropertyChanging();
					this._BusID = value;
					this.SendPropertyChanged("BusID");
					this.OnBusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_Contacts", Storage="_Business", ThisKey="BusID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Business Business
		{
			get
			{
				return this._Business.Entity;
			}
			set
			{
				Business previousValue = this._Business.Entity;
				if (((previousValue != value) 
							|| (this._Business.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Business.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Business.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._BusID = value.ID;
					}
					else
					{
						this._BusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Business");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dic")]
	public partial class Dic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _PID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    #endregion
		
		public Dic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MenuName;
		
		private string _Url;
		
		private System.Nullable<int> _PID;
		
		private EntitySet<RolesMenu> _RolesMenu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    #endregion
		
		public Menu()
		{
			this._RolesMenu = new EntitySet<RolesMenu>(new Action<RolesMenu>(this.attach_RolesMenu), new Action<RolesMenu>(this.detach_RolesMenu));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(50)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RolesMenu", Storage="_RolesMenu", ThisKey="ID", OtherKey="MenuID")]
		public EntitySet<RolesMenu> RolesMenu
		{
			get
			{
				return this._RolesMenu;
			}
			set
			{
				this._RolesMenu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolesMenu(RolesMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_RolesMenu(RolesMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OperateLog")]
	public partial class OperateLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _OperTime;
		
		private string _OperType;
		
		private string _Operator;
		
		private string _Operdescribe;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOperTimeChanging(string value);
    partial void OnOperTimeChanged();
    partial void OnOperTypeChanging(string value);
    partial void OnOperTypeChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnOperdescribeChanging(string value);
    partial void OnOperdescribeChanged();
    #endregion
		
		public OperateLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperTime", DbType="NVarChar(50)")]
		public string OperTime
		{
			get
			{
				return this._OperTime;
			}
			set
			{
				if ((this._OperTime != value))
				{
					this.OnOperTimeChanging(value);
					this.SendPropertyChanging();
					this._OperTime = value;
					this.SendPropertyChanged("OperTime");
					this.OnOperTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperType", DbType="NVarChar(50)")]
		public string OperType
		{
			get
			{
				return this._OperType;
			}
			set
			{
				if ((this._OperType != value))
				{
					this.OnOperTypeChanging(value);
					this.SendPropertyChanging();
					this._OperType = value;
					this.SendPropertyChanged("OperType");
					this.OnOperTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="NVarChar(50)")]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operdescribe", DbType="NVarChar(50)")]
		public string Operdescribe
		{
			get
			{
				return this._Operdescribe;
			}
			set
			{
				if ((this._Operdescribe != value))
				{
					this.OnOperdescribeChanging(value);
					this.SendPropertyChanging();
					this._Operdescribe = value;
					this.SendPropertyChanged("Operdescribe");
					this.OnOperdescribeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlContacts")]
	public partial class PlContacts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Tel;
		
		private string _Post;
		
		private System.Nullable<int> _PlID;
		
		private EntityRef<PrivateLine> _PrivateLine;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnPlIDChanging(System.Nullable<int> value);
    partial void OnPlIDChanged();
    #endregion
		
		public PlContacts()
		{
			this._PrivateLine = default(EntityRef<PrivateLine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(50)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlID", DbType="Int")]
		public System.Nullable<int> PlID
		{
			get
			{
				return this._PlID;
			}
			set
			{
				if ((this._PlID != value))
				{
					if (this._PrivateLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlIDChanging(value);
					this.SendPropertyChanging();
					this._PlID = value;
					this.SendPropertyChanged("PlID");
					this.OnPlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateLine_PlContacts", Storage="_PrivateLine", ThisKey="PlID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PrivateLine PrivateLine
		{
			get
			{
				return this._PrivateLine.Entity;
			}
			set
			{
				PrivateLine previousValue = this._PrivateLine.Entity;
				if (((previousValue != value) 
							|| (this._PrivateLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrivateLine.Entity = null;
						previousValue.PlContacts.Remove(this);
					}
					this._PrivateLine.Entity = value;
					if ((value != null))
					{
						value.PlContacts.Add(this);
						this._PlID = value.ID;
					}
					else
					{
						this._PlID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrivateLine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlRemind")]
	public partial class PlRemind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Type;
		
		private string _AddTime;
		
		private string _Contents;
		
		private string _ReceiptTime;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _PlID;
		
		private System.Nullable<int> _PlInfoID;
		
		private System.Nullable<int> _PlVisitID;
		
		private EntityRef<PlVisit> _PlVisit;
		
		private EntityRef<PrivateLine> _PrivateLine;
		
		private EntityRef<PlInfo> _PlInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnReceiptTimeChanging(string value);
    partial void OnReceiptTimeChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnPlIDChanging(System.Nullable<int> value);
    partial void OnPlIDChanged();
    partial void OnPlInfoIDChanging(System.Nullable<int> value);
    partial void OnPlInfoIDChanged();
    partial void OnPlVisitIDChanging(System.Nullable<int> value);
    partial void OnPlVisitIDChanged();
    #endregion
		
		public PlRemind()
		{
			this._PlVisit = default(EntityRef<PlVisit>);
			this._PrivateLine = default(EntityRef<PrivateLine>);
			this._PlInfo = default(EntityRef<PlInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(50)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTime", DbType="NVarChar(50)")]
		public string ReceiptTime
		{
			get
			{
				return this._ReceiptTime;
			}
			set
			{
				if ((this._ReceiptTime != value))
				{
					this.OnReceiptTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTime = value;
					this.SendPropertyChanged("ReceiptTime");
					this.OnReceiptTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlID", DbType="Int")]
		public System.Nullable<int> PlID
		{
			get
			{
				return this._PlID;
			}
			set
			{
				if ((this._PlID != value))
				{
					if (this._PrivateLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlIDChanging(value);
					this.SendPropertyChanging();
					this._PlID = value;
					this.SendPropertyChanged("PlID");
					this.OnPlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlInfoID", DbType="Int")]
		public System.Nullable<int> PlInfoID
		{
			get
			{
				return this._PlInfoID;
			}
			set
			{
				if ((this._PlInfoID != value))
				{
					if (this._PlInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PlInfoID = value;
					this.SendPropertyChanged("PlInfoID");
					this.OnPlInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlVisitID", DbType="Int")]
		public System.Nullable<int> PlVisitID
		{
			get
			{
				return this._PlVisitID;
			}
			set
			{
				if ((this._PlVisitID != value))
				{
					if (this._PlVisit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlVisitIDChanging(value);
					this.SendPropertyChanging();
					this._PlVisitID = value;
					this.SendPropertyChanged("PlVisitID");
					this.OnPlVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlVisit_PlRemind", Storage="_PlVisit", ThisKey="PlVisitID", OtherKey="ID", IsForeignKey=true)]
		public PlVisit PlVisit
		{
			get
			{
				return this._PlVisit.Entity;
			}
			set
			{
				PlVisit previousValue = this._PlVisit.Entity;
				if (((previousValue != value) 
							|| (this._PlVisit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlVisit.Entity = null;
						previousValue.PlRemind.Remove(this);
					}
					this._PlVisit.Entity = value;
					if ((value != null))
					{
						value.PlRemind.Add(this);
						this._PlVisitID = value.ID;
					}
					else
					{
						this._PlVisitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PlVisit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateLine_PlRemind", Storage="_PrivateLine", ThisKey="PlID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PrivateLine PrivateLine
		{
			get
			{
				return this._PrivateLine.Entity;
			}
			set
			{
				PrivateLine previousValue = this._PrivateLine.Entity;
				if (((previousValue != value) 
							|| (this._PrivateLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrivateLine.Entity = null;
						previousValue.PlRemind.Remove(this);
					}
					this._PrivateLine.Entity = value;
					if ((value != null))
					{
						value.PlRemind.Add(this);
						this._PlID = value.ID;
					}
					else
					{
						this._PlID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrivateLine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlInfo_PlRemind", Storage="_PlInfo", ThisKey="PlInfoID", OtherKey="ID", IsForeignKey=true)]
		public PlInfo PlInfo
		{
			get
			{
				return this._PlInfo.Entity;
			}
			set
			{
				PlInfo previousValue = this._PlInfo.Entity;
				if (((previousValue != value) 
							|| (this._PlInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlInfo.Entity = null;
						previousValue.PlRemind.Remove(this);
					}
					this._PlInfo.Entity = value;
					if ((value != null))
					{
						value.PlRemind.Add(this);
						this._PlInfoID = value.ID;
					}
					else
					{
						this._PlInfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PlInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlVisit")]
	public partial class PlVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IsNeed;
		
		private System.Nullable<int> _IsAgain;
		
		private string _VisitTime;
		
		private string _AddTime;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _PlID;
		
		private string _VisitContents;
		
		private string _Img;
		
		private string _NextTime;
		
		private System.Nullable<int> _IsOther;
		
		private string _OtherDesc;
		
		private EntitySet<PlRemind> _PlRemind;
		
		private EntityRef<PrivateLine> _PrivateLine;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsNeedChanging(System.Nullable<int> value);
    partial void OnIsNeedChanged();
    partial void OnIsAgainChanging(System.Nullable<int> value);
    partial void OnIsAgainChanged();
    partial void OnVisitTimeChanging(string value);
    partial void OnVisitTimeChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnPlIDChanging(System.Nullable<int> value);
    partial void OnPlIDChanged();
    partial void OnVisitContentsChanging(string value);
    partial void OnVisitContentsChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnNextTimeChanging(string value);
    partial void OnNextTimeChanged();
    partial void OnIsOtherChanging(System.Nullable<int> value);
    partial void OnIsOtherChanged();
    partial void OnOtherDescChanging(string value);
    partial void OnOtherDescChanged();
    #endregion
		
		public PlVisit()
		{
			this._PlRemind = new EntitySet<PlRemind>(new Action<PlRemind>(this.attach_PlRemind), new Action<PlRemind>(this.detach_PlRemind));
			this._PrivateLine = default(EntityRef<PrivateLine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeed", DbType="Int")]
		public System.Nullable<int> IsNeed
		{
			get
			{
				return this._IsNeed;
			}
			set
			{
				if ((this._IsNeed != value))
				{
					this.OnIsNeedChanging(value);
					this.SendPropertyChanging();
					this._IsNeed = value;
					this.SendPropertyChanged("IsNeed");
					this.OnIsNeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgain", DbType="Int")]
		public System.Nullable<int> IsAgain
		{
			get
			{
				return this._IsAgain;
			}
			set
			{
				if ((this._IsAgain != value))
				{
					this.OnIsAgainChanging(value);
					this.SendPropertyChanging();
					this._IsAgain = value;
					this.SendPropertyChanged("IsAgain");
					this.OnIsAgainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTime", DbType="NVarChar(50)")]
		public string VisitTime
		{
			get
			{
				return this._VisitTime;
			}
			set
			{
				if ((this._VisitTime != value))
				{
					this.OnVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._VisitTime = value;
					this.SendPropertyChanged("VisitTime");
					this.OnVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlID", DbType="Int")]
		public System.Nullable<int> PlID
		{
			get
			{
				return this._PlID;
			}
			set
			{
				if ((this._PlID != value))
				{
					if (this._PrivateLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlIDChanging(value);
					this.SendPropertyChanging();
					this._PlID = value;
					this.SendPropertyChanged("PlID");
					this.OnPlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitContents", DbType="NVarChar(200)")]
		public string VisitContents
		{
			get
			{
				return this._VisitContents;
			}
			set
			{
				if ((this._VisitContents != value))
				{
					this.OnVisitContentsChanging(value);
					this.SendPropertyChanging();
					this._VisitContents = value;
					this.SendPropertyChanged("VisitContents");
					this.OnVisitContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="NVarChar(MAX)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextTime", DbType="NVarChar(50)")]
		public string NextTime
		{
			get
			{
				return this._NextTime;
			}
			set
			{
				if ((this._NextTime != value))
				{
					this.OnNextTimeChanging(value);
					this.SendPropertyChanging();
					this._NextTime = value;
					this.SendPropertyChanged("NextTime");
					this.OnNextTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOther", DbType="Int")]
		public System.Nullable<int> IsOther
		{
			get
			{
				return this._IsOther;
			}
			set
			{
				if ((this._IsOther != value))
				{
					this.OnIsOtherChanging(value);
					this.SendPropertyChanging();
					this._IsOther = value;
					this.SendPropertyChanged("IsOther");
					this.OnIsOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDesc", DbType="NVarChar(200)")]
		public string OtherDesc
		{
			get
			{
				return this._OtherDesc;
			}
			set
			{
				if ((this._OtherDesc != value))
				{
					this.OnOtherDescChanging(value);
					this.SendPropertyChanging();
					this._OtherDesc = value;
					this.SendPropertyChanged("OtherDesc");
					this.OnOtherDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlVisit_PlRemind", Storage="_PlRemind", ThisKey="ID", OtherKey="PlVisitID")]
		public EntitySet<PlRemind> PlRemind
		{
			get
			{
				return this._PlRemind;
			}
			set
			{
				this._PlRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateLine_PlVisit", Storage="_PrivateLine", ThisKey="PlID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PrivateLine PrivateLine
		{
			get
			{
				return this._PrivateLine.Entity;
			}
			set
			{
				PrivateLine previousValue = this._PrivateLine.Entity;
				if (((previousValue != value) 
							|| (this._PrivateLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrivateLine.Entity = null;
						previousValue.PlVisit.Remove(this);
					}
					this._PrivateLine.Entity = value;
					if ((value != null))
					{
						value.PlVisit.Add(this);
						this._PlID = value.ID;
					}
					else
					{
						this._PlID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrivateLine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlRemind(PlRemind entity)
		{
			this.SendPropertyChanging();
			entity.PlVisit = this;
		}
		
		private void detach_PlRemind(PlRemind entity)
		{
			this.SendPropertyChanging();
			entity.PlVisit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrivateLine")]
	public partial class PrivateLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CompanyName;
		
		private string _CompanyAddress;
		
		private string _CompanyScale;
		
		private string _AddTime;
		
		private string _LastTime;
		
		private System.Nullable<int> _UserID;
		
		private string _Remark;
		
		private System.Nullable<int> _State;
		
		private EntitySet<PlContacts> _PlContacts;
		
		private EntitySet<PlRemind> _PlRemind;
		
		private EntitySet<PlVisit> _PlVisit;
		
		private EntitySet<PlInfo> _PlInfo;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnCompanyScaleChanging(string value);
    partial void OnCompanyScaleChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnLastTimeChanging(string value);
    partial void OnLastTimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    #endregion
		
		public PrivateLine()
		{
			this._PlContacts = new EntitySet<PlContacts>(new Action<PlContacts>(this.attach_PlContacts), new Action<PlContacts>(this.detach_PlContacts));
			this._PlRemind = new EntitySet<PlRemind>(new Action<PlRemind>(this.attach_PlRemind), new Action<PlRemind>(this.detach_PlRemind));
			this._PlVisit = new EntitySet<PlVisit>(new Action<PlVisit>(this.attach_PlVisit), new Action<PlVisit>(this.detach_PlVisit));
			this._PlInfo = new EntitySet<PlInfo>(new Action<PlInfo>(this.attach_PlInfo), new Action<PlInfo>(this.detach_PlInfo));
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(200)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(500)")]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyScale", DbType="NVarChar(50)")]
		public string CompanyScale
		{
			get
			{
				return this._CompanyScale;
			}
			set
			{
				if ((this._CompanyScale != value))
				{
					this.OnCompanyScaleChanging(value);
					this.SendPropertyChanging();
					this._CompanyScale = value;
					this.SendPropertyChanged("CompanyScale");
					this.OnCompanyScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTime", DbType="NVarChar(50)")]
		public string LastTime
		{
			get
			{
				return this._LastTime;
			}
			set
			{
				if ((this._LastTime != value))
				{
					this.OnLastTimeChanging(value);
					this.SendPropertyChanging();
					this._LastTime = value;
					this.SendPropertyChanged("LastTime");
					this.OnLastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateLine_PlContacts", Storage="_PlContacts", ThisKey="ID", OtherKey="PlID")]
		public EntitySet<PlContacts> PlContacts
		{
			get
			{
				return this._PlContacts;
			}
			set
			{
				this._PlContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateLine_PlRemind", Storage="_PlRemind", ThisKey="ID", OtherKey="PlID")]
		public EntitySet<PlRemind> PlRemind
		{
			get
			{
				return this._PlRemind;
			}
			set
			{
				this._PlRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateLine_PlVisit", Storage="_PlVisit", ThisKey="ID", OtherKey="PlID")]
		public EntitySet<PlVisit> PlVisit
		{
			get
			{
				return this._PlVisit;
			}
			set
			{
				this._PlVisit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateLine_PlInfo", Storage="_PlInfo", ThisKey="ID", OtherKey="PlID")]
		public EntitySet<PlInfo> PlInfo
		{
			get
			{
				return this._PlInfo;
			}
			set
			{
				this._PlInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_PrivateLine", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.PrivateLine.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.PrivateLine.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlContacts(PlContacts entity)
		{
			this.SendPropertyChanging();
			entity.PrivateLine = this;
		}
		
		private void detach_PlContacts(PlContacts entity)
		{
			this.SendPropertyChanging();
			entity.PrivateLine = null;
		}
		
		private void attach_PlRemind(PlRemind entity)
		{
			this.SendPropertyChanging();
			entity.PrivateLine = this;
		}
		
		private void detach_PlRemind(PlRemind entity)
		{
			this.SendPropertyChanging();
			entity.PrivateLine = null;
		}
		
		private void attach_PlVisit(PlVisit entity)
		{
			this.SendPropertyChanging();
			entity.PrivateLine = this;
		}
		
		private void detach_PlVisit(PlVisit entity)
		{
			this.SendPropertyChanging();
			entity.PrivateLine = null;
		}
		
		private void attach_PlInfo(PlInfo entity)
		{
			this.SendPropertyChanging();
			entity.PrivateLine = this;
		}
		
		private void detach_PlInfo(PlInfo entity)
		{
			this.SendPropertyChanging();
			entity.PrivateLine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Areas;
		
		private string _Introduce;
		
		private string _Instruction;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _IsRead;
		
		private string _AddTime;
		
		private string _LastTime;
		
		private System.Nullable<int> _Type;
		
		private EntitySet<ProRead> _ProRead;
		
		private EntitySet<ProRemind> _ProRemind;
		
		private EntitySet<ProVisit> _ProVisit;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAreasChanging(string value);
    partial void OnAreasChanged();
    partial void OnIntroduceChanging(string value);
    partial void OnIntroduceChanged();
    partial void OnInstructionChanging(string value);
    partial void OnInstructionChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsReadChanging(System.Nullable<int> value);
    partial void OnIsReadChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnLastTimeChanging(string value);
    partial void OnLastTimeChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    #endregion
		
		public Project()
		{
			this._ProRead = new EntitySet<ProRead>(new Action<ProRead>(this.attach_ProRead), new Action<ProRead>(this.detach_ProRead));
			this._ProRemind = new EntitySet<ProRemind>(new Action<ProRemind>(this.attach_ProRemind), new Action<ProRemind>(this.detach_ProRemind));
			this._ProVisit = new EntitySet<ProVisit>(new Action<ProVisit>(this.attach_ProVisit), new Action<ProVisit>(this.detach_ProVisit));
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Areas", DbType="NVarChar(50)")]
		public string Areas
		{
			get
			{
				return this._Areas;
			}
			set
			{
				if ((this._Areas != value))
				{
					this.OnAreasChanging(value);
					this.SendPropertyChanging();
					this._Areas = value;
					this.SendPropertyChanged("Areas");
					this.OnAreasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Introduce", DbType="NVarChar(MAX)")]
		public string Introduce
		{
			get
			{
				return this._Introduce;
			}
			set
			{
				if ((this._Introduce != value))
				{
					this.OnIntroduceChanging(value);
					this.SendPropertyChanging();
					this._Introduce = value;
					this.SendPropertyChanged("Introduce");
					this.OnIntroduceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction", DbType="NVarChar(MAX)")]
		public string Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Int")]
		public System.Nullable<int> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTime", DbType="NVarChar(50)")]
		public string LastTime
		{
			get
			{
				return this._LastTime;
			}
			set
			{
				if ((this._LastTime != value))
				{
					this.OnLastTimeChanging(value);
					this.SendPropertyChanging();
					this._LastTime = value;
					this.SendPropertyChanged("LastTime");
					this.OnLastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProRead", Storage="_ProRead", ThisKey="ID", OtherKey="ProID")]
		public EntitySet<ProRead> ProRead
		{
			get
			{
				return this._ProRead;
			}
			set
			{
				this._ProRead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProRemind", Storage="_ProRemind", ThisKey="ID", OtherKey="ProID")]
		public EntitySet<ProRemind> ProRemind
		{
			get
			{
				return this._ProRemind;
			}
			set
			{
				this._ProRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProVisit", Storage="_ProVisit", ThisKey="ID", OtherKey="ProID")]
		public EntitySet<ProVisit> ProVisit
		{
			get
			{
				return this._ProVisit;
			}
			set
			{
				this._ProVisit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Project", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Project.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Project.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProRead(ProRead entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProRead(ProRead entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProRemind(ProRemind entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProRemind(ProRemind entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProVisit(ProVisit entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProVisit(ProVisit entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProRead")]
	public partial class ProRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _ProID;
		
		private System.Nullable<int> _IsRead;
		
		private EntityRef<Project> _Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnProIDChanging(System.Nullable<int> value);
    partial void OnProIDChanged();
    partial void OnIsReadChanging(System.Nullable<int> value);
    partial void OnIsReadChanged();
    #endregion
		
		public ProRead()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProID", DbType="Int")]
		public System.Nullable<int> ProID
		{
			get
			{
				return this._ProID;
			}
			set
			{
				if ((this._ProID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProIDChanging(value);
					this.SendPropertyChanging();
					this._ProID = value;
					this.SendPropertyChanged("ProID");
					this.OnProIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Int")]
		public System.Nullable<int> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProRead", Storage="_Project", ThisKey="ProID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProRead.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProRead.Add(this);
						this._ProID = value.ID;
					}
					else
					{
						this._ProID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProRemind")]
	public partial class ProRemind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AddTime;
		
		private string _RemindContents;
		
		private string _ReceiptTime;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _ProID;
		
		private System.Nullable<int> _ProVisitID;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<ProVisit> _ProVisit;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnRemindContentsChanging(string value);
    partial void OnRemindContentsChanged();
    partial void OnReceiptTimeChanging(string value);
    partial void OnReceiptTimeChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnProIDChanging(System.Nullable<int> value);
    partial void OnProIDChanged();
    partial void OnProVisitIDChanging(System.Nullable<int> value);
    partial void OnProVisitIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public ProRemind()
		{
			this._Project = default(EntityRef<Project>);
			this._ProVisit = default(EntityRef<ProVisit>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemindContents", DbType="NVarChar(50)")]
		public string RemindContents
		{
			get
			{
				return this._RemindContents;
			}
			set
			{
				if ((this._RemindContents != value))
				{
					this.OnRemindContentsChanging(value);
					this.SendPropertyChanging();
					this._RemindContents = value;
					this.SendPropertyChanged("RemindContents");
					this.OnRemindContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTime", DbType="NVarChar(50)")]
		public string ReceiptTime
		{
			get
			{
				return this._ReceiptTime;
			}
			set
			{
				if ((this._ReceiptTime != value))
				{
					this.OnReceiptTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTime = value;
					this.SendPropertyChanged("ReceiptTime");
					this.OnReceiptTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProID", DbType="Int")]
		public System.Nullable<int> ProID
		{
			get
			{
				return this._ProID;
			}
			set
			{
				if ((this._ProID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProIDChanging(value);
					this.SendPropertyChanging();
					this._ProID = value;
					this.SendPropertyChanged("ProID");
					this.OnProIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProVisitID", DbType="Int")]
		public System.Nullable<int> ProVisitID
		{
			get
			{
				return this._ProVisitID;
			}
			set
			{
				if ((this._ProVisitID != value))
				{
					if (this._ProVisit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProVisitIDChanging(value);
					this.SendPropertyChanging();
					this._ProVisitID = value;
					this.SendPropertyChanged("ProVisitID");
					this.OnProVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProRemind", Storage="_Project", ThisKey="ProID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProRemind.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProRemind.Add(this);
						this._ProID = value.ID;
					}
					else
					{
						this._ProID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProVisit_ProRemind", Storage="_ProVisit", ThisKey="ProVisitID", OtherKey="ID", IsForeignKey=true)]
		public ProVisit ProVisit
		{
			get
			{
				return this._ProVisit.Entity;
			}
			set
			{
				ProVisit previousValue = this._ProVisit.Entity;
				if (((previousValue != value) 
							|| (this._ProVisit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProVisit.Entity = null;
						previousValue.ProRemind.Remove(this);
					}
					this._ProVisit.Entity = value;
					if ((value != null))
					{
						value.ProRemind.Add(this);
						this._ProVisitID = value.ID;
					}
					else
					{
						this._ProVisitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProVisit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_ProRemind", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.ProRemind.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.ProRemind.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProVisit")]
	public partial class ProVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ProID;
		
		private string _VisitContents;
		
		private string _AddTime;
		
		private string _NextTime;
		
		private string _Img;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _UserID;
		
		private string _VisitTime;
		
		private EntitySet<ProRemind> _ProRemind;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProIDChanging(System.Nullable<int> value);
    partial void OnProIDChanged();
    partial void OnVisitContentsChanging(string value);
    partial void OnVisitContentsChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnNextTimeChanging(string value);
    partial void OnNextTimeChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnVisitTimeChanging(string value);
    partial void OnVisitTimeChanged();
    #endregion
		
		public ProVisit()
		{
			this._ProRemind = new EntitySet<ProRemind>(new Action<ProRemind>(this.attach_ProRemind), new Action<ProRemind>(this.detach_ProRemind));
			this._Project = default(EntityRef<Project>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProID", DbType="Int")]
		public System.Nullable<int> ProID
		{
			get
			{
				return this._ProID;
			}
			set
			{
				if ((this._ProID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProIDChanging(value);
					this.SendPropertyChanging();
					this._ProID = value;
					this.SendPropertyChanged("ProID");
					this.OnProIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitContents", DbType="NVarChar(50)")]
		public string VisitContents
		{
			get
			{
				return this._VisitContents;
			}
			set
			{
				if ((this._VisitContents != value))
				{
					this.OnVisitContentsChanging(value);
					this.SendPropertyChanging();
					this._VisitContents = value;
					this.SendPropertyChanged("VisitContents");
					this.OnVisitContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextTime", DbType="NVarChar(50)")]
		public string NextTime
		{
			get
			{
				return this._NextTime;
			}
			set
			{
				if ((this._NextTime != value))
				{
					this.OnNextTimeChanging(value);
					this.SendPropertyChanging();
					this._NextTime = value;
					this.SendPropertyChanged("NextTime");
					this.OnNextTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="NVarChar(MAX)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTime", DbType="NVarChar(50)")]
		public string VisitTime
		{
			get
			{
				return this._VisitTime;
			}
			set
			{
				if ((this._VisitTime != value))
				{
					this.OnVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._VisitTime = value;
					this.SendPropertyChanged("VisitTime");
					this.OnVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProVisit_ProRemind", Storage="_ProRemind", ThisKey="ID", OtherKey="ProVisitID")]
		public EntitySet<ProRemind> ProRemind
		{
			get
			{
				return this._ProRemind;
			}
			set
			{
				this._ProRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProVisit", Storage="_Project", ThisKey="ProID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProVisit.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProVisit.Add(this);
						this._ProID = value.ID;
					}
					else
					{
						this._ProID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_ProVisit", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.ProVisit.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.ProVisit.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProRemind(ProRemind entity)
		{
			this.SendPropertyChanging();
			entity.ProVisit = this;
		}
		
		private void detach_ProRemind(ProRemind entity)
		{
			this.SendPropertyChanging();
			entity.ProVisit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Pid;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPidChanging(System.Nullable<int> value);
    partial void OnPidChanged();
    #endregion
		
		public Region()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", DbType="Int")]
		public System.Nullable<int> Pid
		{
			get
			{
				return this._Pid;
			}
			set
			{
				if ((this._Pid != value))
				{
					this.OnPidChanging(value);
					this.SendPropertyChanging();
					this._Pid = value;
					this.SendPropertyChanged("Pid");
					this.OnPidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class Reports : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Rank;
		
		private string _Grids;
		
		private string _Name;
		
		private string _Month;
		
		private string _StockIncome;
		
		private string _NewIncome;
		
		private string _TotalIncome;
		
		private string _StockIncomeRate;
		
		private string _R0Aims;
		
		private string _R0CompleteRate;
		
		private string _R2Aims;
		
		private string _R2CompleteRate;
		
		private string _AddTime;
		
		private System.Nullable<int> _UserID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRankChanging(System.Nullable<int> value);
    partial void OnRankChanged();
    partial void OnGridsChanging(string value);
    partial void OnGridsChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnStockIncomeChanging(string value);
    partial void OnStockIncomeChanged();
    partial void OnNewIncomeChanging(string value);
    partial void OnNewIncomeChanged();
    partial void OnTotalIncomeChanging(string value);
    partial void OnTotalIncomeChanged();
    partial void OnStockIncomeRateChanging(string value);
    partial void OnStockIncomeRateChanged();
    partial void OnR0AimsChanging(string value);
    partial void OnR0AimsChanged();
    partial void OnR0CompleteRateChanging(string value);
    partial void OnR0CompleteRateChanged();
    partial void OnR2AimsChanging(string value);
    partial void OnR2AimsChanged();
    partial void OnR2CompleteRateChanging(string value);
    partial void OnR2CompleteRateChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public Reports()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grids", DbType="NVarChar(50)")]
		public string Grids
		{
			get
			{
				return this._Grids;
			}
			set
			{
				if ((this._Grids != value))
				{
					this.OnGridsChanging(value);
					this.SendPropertyChanging();
					this._Grids = value;
					this.SendPropertyChanged("Grids");
					this.OnGridsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NVarChar(50)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockIncome", DbType="NVarChar(50)")]
		public string StockIncome
		{
			get
			{
				return this._StockIncome;
			}
			set
			{
				if ((this._StockIncome != value))
				{
					this.OnStockIncomeChanging(value);
					this.SendPropertyChanging();
					this._StockIncome = value;
					this.SendPropertyChanged("StockIncome");
					this.OnStockIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewIncome", DbType="NVarChar(50)")]
		public string NewIncome
		{
			get
			{
				return this._NewIncome;
			}
			set
			{
				if ((this._NewIncome != value))
				{
					this.OnNewIncomeChanging(value);
					this.SendPropertyChanging();
					this._NewIncome = value;
					this.SendPropertyChanged("NewIncome");
					this.OnNewIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalIncome", DbType="NVarChar(50)")]
		public string TotalIncome
		{
			get
			{
				return this._TotalIncome;
			}
			set
			{
				if ((this._TotalIncome != value))
				{
					this.OnTotalIncomeChanging(value);
					this.SendPropertyChanging();
					this._TotalIncome = value;
					this.SendPropertyChanged("TotalIncome");
					this.OnTotalIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockIncomeRate", DbType="NVarChar(50)")]
		public string StockIncomeRate
		{
			get
			{
				return this._StockIncomeRate;
			}
			set
			{
				if ((this._StockIncomeRate != value))
				{
					this.OnStockIncomeRateChanging(value);
					this.SendPropertyChanging();
					this._StockIncomeRate = value;
					this.SendPropertyChanged("StockIncomeRate");
					this.OnStockIncomeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R0Aims", DbType="NVarChar(50)")]
		public string R0Aims
		{
			get
			{
				return this._R0Aims;
			}
			set
			{
				if ((this._R0Aims != value))
				{
					this.OnR0AimsChanging(value);
					this.SendPropertyChanging();
					this._R0Aims = value;
					this.SendPropertyChanged("R0Aims");
					this.OnR0AimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R0CompleteRate", DbType="NVarChar(50)")]
		public string R0CompleteRate
		{
			get
			{
				return this._R0CompleteRate;
			}
			set
			{
				if ((this._R0CompleteRate != value))
				{
					this.OnR0CompleteRateChanging(value);
					this.SendPropertyChanging();
					this._R0CompleteRate = value;
					this.SendPropertyChanged("R0CompleteRate");
					this.OnR0CompleteRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R2Aims", DbType="NVarChar(50)")]
		public string R2Aims
		{
			get
			{
				return this._R2Aims;
			}
			set
			{
				if ((this._R2Aims != value))
				{
					this.OnR2AimsChanging(value);
					this.SendPropertyChanging();
					this._R2Aims = value;
					this.SendPropertyChanged("R2Aims");
					this.OnR2AimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R2CompleteRate", DbType="NVarChar(50)")]
		public string R2CompleteRate
		{
			get
			{
				return this._R2CompleteRate;
			}
			set
			{
				if ((this._R2CompleteRate != value))
				{
					this.OnR2CompleteRateChanging(value);
					this.SendPropertyChanging();
					this._R2CompleteRate = value;
					this.SendPropertyChanged("R2CompleteRate");
					this.OnR2CompleteRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RoleName;
		
		private EntitySet<RolesMenu> _RolesMenu;
		
		private EntitySet<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public Roles()
		{
			this._RolesMenu = new EntitySet<RolesMenu>(new Action<RolesMenu>(this.attach_RolesMenu), new Action<RolesMenu>(this.detach_RolesMenu));
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_RolesMenu", Storage="_RolesMenu", ThisKey="ID", OtherKey="RolesID")]
		public EntitySet<RolesMenu> RolesMenu
		{
			get
			{
				return this._RolesMenu;
			}
			set
			{
				this._RolesMenu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Users", Storage="_Users", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolesMenu(RolesMenu entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_RolesMenu(RolesMenu entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RolesMenu")]
	public partial class RolesMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RolesID;
		
		private System.Nullable<int> _MenuID;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<Roles> _Roles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRolesIDChanging(System.Nullable<int> value);
    partial void OnRolesIDChanged();
    partial void OnMenuIDChanging(System.Nullable<int> value);
    partial void OnMenuIDChanged();
    #endregion
		
		public RolesMenu()
		{
			this._Menu = default(EntityRef<Menu>);
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolesID", DbType="Int")]
		public System.Nullable<int> RolesID
		{
			get
			{
				return this._RolesID;
			}
			set
			{
				if ((this._RolesID != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRolesIDChanging(value);
					this.SendPropertyChanging();
					this._RolesID = value;
					this.SendPropertyChanged("RolesID");
					this.OnRolesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int")]
		public System.Nullable<int> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RolesMenu", Storage="_Menu", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.RolesMenu.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.RolesMenu.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_RolesMenu", Storage="_Roles", ThisKey="RolesID", OtherKey="ID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.RolesMenu.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.RolesMenu.Add(this);
						this._RolesID = value.ID;
					}
					else
					{
						this._RolesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmaBaRead")]
	public partial class SmaBaRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SmBaID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _IsRead;
		
		private EntityRef<SmallBalance> _SmallBalance;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSmBaIDChanging(System.Nullable<int> value);
    partial void OnSmBaIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsReadChanging(System.Nullable<int> value);
    partial void OnIsReadChanged();
    #endregion
		
		public SmaBaRead()
		{
			this._SmallBalance = default(EntityRef<SmallBalance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmBaID", DbType="Int")]
		public System.Nullable<int> SmBaID
		{
			get
			{
				return this._SmBaID;
			}
			set
			{
				if ((this._SmBaID != value))
				{
					if (this._SmallBalance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmBaIDChanging(value);
					this.SendPropertyChanging();
					this._SmBaID = value;
					this.SendPropertyChanged("SmBaID");
					this.OnSmBaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Int")]
		public System.Nullable<int> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmallBalance_SmaBaRead", Storage="_SmallBalance", ThisKey="SmBaID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SmallBalance SmallBalance
		{
			get
			{
				return this._SmallBalance.Entity;
			}
			set
			{
				SmallBalance previousValue = this._SmallBalance.Entity;
				if (((previousValue != value) 
							|| (this._SmallBalance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SmallBalance.Entity = null;
						previousValue.SmaBaRead.Remove(this);
					}
					this._SmallBalance.Entity = value;
					if ((value != null))
					{
						value.SmaBaRead.Add(this);
						this._SmBaID = value.ID;
					}
					else
					{
						this._SmBaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SmallBalance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmaBaRemind")]
	public partial class SmaBaRemind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ReceiptTime;
		
		private string _AddTime;
		
		private string _ReceiptContent;
		
		private System.Nullable<int> _SmBaID;
		
		private System.Nullable<int> _State;
		
		private EntityRef<SmallBalance> _SmallBalance;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReceiptTimeChanging(string value);
    partial void OnReceiptTimeChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnReceiptContentChanging(string value);
    partial void OnReceiptContentChanged();
    partial void OnSmBaIDChanging(System.Nullable<int> value);
    partial void OnSmBaIDChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    #endregion
		
		public SmaBaRemind()
		{
			this._SmallBalance = default(EntityRef<SmallBalance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTime", DbType="NVarChar(50)")]
		public string ReceiptTime
		{
			get
			{
				return this._ReceiptTime;
			}
			set
			{
				if ((this._ReceiptTime != value))
				{
					this.OnReceiptTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTime = value;
					this.SendPropertyChanged("ReceiptTime");
					this.OnReceiptTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptContent", DbType="NVarChar(50)")]
		public string ReceiptContent
		{
			get
			{
				return this._ReceiptContent;
			}
			set
			{
				if ((this._ReceiptContent != value))
				{
					this.OnReceiptContentChanging(value);
					this.SendPropertyChanging();
					this._ReceiptContent = value;
					this.SendPropertyChanged("ReceiptContent");
					this.OnReceiptContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmBaID", DbType="Int")]
		public System.Nullable<int> SmBaID
		{
			get
			{
				return this._SmBaID;
			}
			set
			{
				if ((this._SmBaID != value))
				{
					if (this._SmallBalance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSmBaIDChanging(value);
					this.SendPropertyChanging();
					this._SmBaID = value;
					this.SendPropertyChanged("SmBaID");
					this.OnSmBaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmallBalance_SmaBaRemind", Storage="_SmallBalance", ThisKey="SmBaID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SmallBalance SmallBalance
		{
			get
			{
				return this._SmallBalance.Entity;
			}
			set
			{
				SmallBalance previousValue = this._SmallBalance.Entity;
				if (((previousValue != value) 
							|| (this._SmallBalance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SmallBalance.Entity = null;
						previousValue.SmaBaRemind.Remove(this);
					}
					this._SmallBalance.Entity = value;
					if ((value != null))
					{
						value.SmaBaRemind.Add(this);
						this._SmBaID = value.ID;
					}
					else
					{
						this._SmBaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SmallBalance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmallBalance")]
	public partial class SmallBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AccountID;
		
		private string _AccessNumber;
		
		private System.Nullable<int> _UserID;
		
		private string _Responsibility;
		
		private string _Balance;
		
		private string _CustomerName;
		
		private string _GroupID;
		
		private string _GroupName;
		
		private string _NetTime;
		
		private string _WeekPrice;
		
		private string _Broadband;
		
		private string _InstalledAddress;
		
		private string _Contacts;
		
		private string _ContactTel;
		
		private string _AddTime;
		
		private System.Nullable<int> _State;
		
		private EntitySet<SmaBaRead> _SmaBaRead;
		
		private EntitySet<SmaBaRemind> _SmaBaRemind;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnAccessNumberChanging(string value);
    partial void OnAccessNumberChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnResponsibilityChanging(string value);
    partial void OnResponsibilityChanged();
    partial void OnBalanceChanging(string value);
    partial void OnBalanceChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnGroupIDChanging(string value);
    partial void OnGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnNetTimeChanging(string value);
    partial void OnNetTimeChanged();
    partial void OnWeekPriceChanging(string value);
    partial void OnWeekPriceChanged();
    partial void OnBroadbandChanging(string value);
    partial void OnBroadbandChanged();
    partial void OnInstalledAddressChanging(string value);
    partial void OnInstalledAddressChanged();
    partial void OnContactsChanging(string value);
    partial void OnContactsChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    #endregion
		
		public SmallBalance()
		{
			this._SmaBaRead = new EntitySet<SmaBaRead>(new Action<SmaBaRead>(this.attach_SmaBaRead), new Action<SmaBaRead>(this.detach_SmaBaRead));
			this._SmaBaRemind = new EntitySet<SmaBaRemind>(new Action<SmaBaRemind>(this.attach_SmaBaRemind), new Action<SmaBaRemind>(this.detach_SmaBaRemind));
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessNumber", DbType="NVarChar(50)")]
		public string AccessNumber
		{
			get
			{
				return this._AccessNumber;
			}
			set
			{
				if ((this._AccessNumber != value))
				{
					this.OnAccessNumberChanging(value);
					this.SendPropertyChanging();
					this._AccessNumber = value;
					this.SendPropertyChanged("AccessNumber");
					this.OnAccessNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsibility", DbType="NVarChar(50)")]
		public string Responsibility
		{
			get
			{
				return this._Responsibility;
			}
			set
			{
				if ((this._Responsibility != value))
				{
					this.OnResponsibilityChanging(value);
					this.SendPropertyChanging();
					this._Responsibility = value;
					this.SendPropertyChanged("Responsibility");
					this.OnResponsibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="NVarChar(50)")]
		public string Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(200)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NVarChar(50)")]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetTime", DbType="NVarChar(50)")]
		public string NetTime
		{
			get
			{
				return this._NetTime;
			}
			set
			{
				if ((this._NetTime != value))
				{
					this.OnNetTimeChanging(value);
					this.SendPropertyChanging();
					this._NetTime = value;
					this.SendPropertyChanged("NetTime");
					this.OnNetTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekPrice", DbType="NVarChar(50)")]
		public string WeekPrice
		{
			get
			{
				return this._WeekPrice;
			}
			set
			{
				if ((this._WeekPrice != value))
				{
					this.OnWeekPriceChanging(value);
					this.SendPropertyChanging();
					this._WeekPrice = value;
					this.SendPropertyChanged("WeekPrice");
					this.OnWeekPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Broadband", DbType="NVarChar(50)")]
		public string Broadband
		{
			get
			{
				return this._Broadband;
			}
			set
			{
				if ((this._Broadband != value))
				{
					this.OnBroadbandChanging(value);
					this.SendPropertyChanging();
					this._Broadband = value;
					this.SendPropertyChanged("Broadband");
					this.OnBroadbandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalledAddress", DbType="NVarChar(500)")]
		public string InstalledAddress
		{
			get
			{
				return this._InstalledAddress;
			}
			set
			{
				if ((this._InstalledAddress != value))
				{
					this.OnInstalledAddressChanging(value);
					this.SendPropertyChanging();
					this._InstalledAddress = value;
					this.SendPropertyChanged("InstalledAddress");
					this.OnInstalledAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contacts", DbType="NVarChar(50)")]
		public string Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				if ((this._Contacts != value))
				{
					this.OnContactsChanging(value);
					this.SendPropertyChanging();
					this._Contacts = value;
					this.SendPropertyChanged("Contacts");
					this.OnContactsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTel", DbType="NVarChar(50)")]
		public string ContactTel
		{
			get
			{
				return this._ContactTel;
			}
			set
			{
				if ((this._ContactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._ContactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmallBalance_SmaBaRead", Storage="_SmaBaRead", ThisKey="ID", OtherKey="SmBaID")]
		public EntitySet<SmaBaRead> SmaBaRead
		{
			get
			{
				return this._SmaBaRead;
			}
			set
			{
				this._SmaBaRead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SmallBalance_SmaBaRemind", Storage="_SmaBaRemind", ThisKey="ID", OtherKey="SmBaID")]
		public EntitySet<SmaBaRemind> SmaBaRemind
		{
			get
			{
				return this._SmaBaRemind;
			}
			set
			{
				this._SmaBaRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_SmallBalance", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.SmallBalance.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.SmallBalance.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SmaBaRead(SmaBaRead entity)
		{
			this.SendPropertyChanging();
			entity.SmallBalance = this;
		}
		
		private void detach_SmaBaRead(SmaBaRead entity)
		{
			this.SendPropertyChanging();
			entity.SmallBalance = null;
		}
		
		private void attach_SmaBaRemind(SmaBaRemind entity)
		{
			this.SendPropertyChanging();
			entity.SmallBalance = this;
		}
		
		private void detach_SmaBaRemind(SmaBaRemind entity)
		{
			this.SendPropertyChanging();
			entity.SmallBalance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StoreName;
		
		private string _Broadband;
		
		private string _Price;
		
		private string _OverTime;
		
		private string _AddTime;
		
		private string _ContactName;
		
		private string _ContactTel;
		
		private string _Img;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _UserID;
		
		private string _LastTime;
		
		private string _StoreAddress;
		
		private string _OtherNeeds;
		
		private EntitySet<StoreRemind> _StoreRemind;
		
		private EntitySet<StoreVisit> _StoreVisit;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    partial void OnBroadbandChanging(string value);
    partial void OnBroadbandChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnOverTimeChanging(string value);
    partial void OnOverTimeChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnLastTimeChanging(string value);
    partial void OnLastTimeChanged();
    partial void OnStoreAddressChanging(string value);
    partial void OnStoreAddressChanged();
    partial void OnOtherNeedsChanging(string value);
    partial void OnOtherNeedsChanged();
    #endregion
		
		public Store()
		{
			this._StoreRemind = new EntitySet<StoreRemind>(new Action<StoreRemind>(this.attach_StoreRemind), new Action<StoreRemind>(this.detach_StoreRemind));
			this._StoreVisit = new EntitySet<StoreVisit>(new Action<StoreVisit>(this.attach_StoreVisit), new Action<StoreVisit>(this.detach_StoreVisit));
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="NVarChar(50)")]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Broadband", DbType="NVarChar(50)")]
		public string Broadband
		{
			get
			{
				return this._Broadband;
			}
			set
			{
				if ((this._Broadband != value))
				{
					this.OnBroadbandChanging(value);
					this.SendPropertyChanging();
					this._Broadband = value;
					this.SendPropertyChanged("Broadband");
					this.OnBroadbandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="NVarChar(50)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverTime", DbType="NVarChar(50)")]
		public string OverTime
		{
			get
			{
				return this._OverTime;
			}
			set
			{
				if ((this._OverTime != value))
				{
					this.OnOverTimeChanging(value);
					this.SendPropertyChanging();
					this._OverTime = value;
					this.SendPropertyChanged("OverTime");
					this.OnOverTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTel", DbType="NVarChar(50)")]
		public string ContactTel
		{
			get
			{
				return this._ContactTel;
			}
			set
			{
				if ((this._ContactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._ContactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="NVarChar(MAX)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTime", DbType="NVarChar(50)")]
		public string LastTime
		{
			get
			{
				return this._LastTime;
			}
			set
			{
				if ((this._LastTime != value))
				{
					this.OnLastTimeChanging(value);
					this.SendPropertyChanging();
					this._LastTime = value;
					this.SendPropertyChanged("LastTime");
					this.OnLastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreAddress", DbType="NVarChar(50)")]
		public string StoreAddress
		{
			get
			{
				return this._StoreAddress;
			}
			set
			{
				if ((this._StoreAddress != value))
				{
					this.OnStoreAddressChanging(value);
					this.SendPropertyChanging();
					this._StoreAddress = value;
					this.SendPropertyChanged("StoreAddress");
					this.OnStoreAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherNeeds", DbType="NVarChar(50)")]
		public string OtherNeeds
		{
			get
			{
				return this._OtherNeeds;
			}
			set
			{
				if ((this._OtherNeeds != value))
				{
					this.OnOtherNeedsChanging(value);
					this.SendPropertyChanging();
					this._OtherNeeds = value;
					this.SendPropertyChanged("OtherNeeds");
					this.OnOtherNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StoreRemind", Storage="_StoreRemind", ThisKey="ID", OtherKey="StoreID")]
		public EntitySet<StoreRemind> StoreRemind
		{
			get
			{
				return this._StoreRemind;
			}
			set
			{
				this._StoreRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StoreVisit", Storage="_StoreVisit", ThisKey="ID", OtherKey="StoreID")]
		public EntitySet<StoreVisit> StoreVisit
		{
			get
			{
				return this._StoreVisit;
			}
			set
			{
				this._StoreVisit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Store", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Store.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Store.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreRemind(StoreRemind entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_StoreRemind(StoreRemind entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_StoreVisit(StoreVisit entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_StoreVisit(StoreVisit entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreRemind")]
	public partial class StoreRemind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Contents;
		
		private System.Nullable<int> _Type;
		
		private string _AddTime;
		
		private string _ReceiptTime;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _StoreID;
		
		private System.Nullable<int> _StoreVisitID;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<StoreVisit> _StoreVisit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnReceiptTimeChanging(string value);
    partial void OnReceiptTimeChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnStoreVisitIDChanging(System.Nullable<int> value);
    partial void OnStoreVisitIDChanged();
    #endregion
		
		public StoreRemind()
		{
			this._Store = default(EntityRef<Store>);
			this._StoreVisit = default(EntityRef<StoreVisit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(50)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTime", DbType="NVarChar(50)")]
		public string ReceiptTime
		{
			get
			{
				return this._ReceiptTime;
			}
			set
			{
				if ((this._ReceiptTime != value))
				{
					this.OnReceiptTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTime = value;
					this.SendPropertyChanged("ReceiptTime");
					this.OnReceiptTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreVisitID", DbType="Int")]
		public System.Nullable<int> StoreVisitID
		{
			get
			{
				return this._StoreVisitID;
			}
			set
			{
				if ((this._StoreVisitID != value))
				{
					if (this._StoreVisit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreVisitIDChanging(value);
					this.SendPropertyChanging();
					this._StoreVisitID = value;
					this.SendPropertyChanged("StoreVisitID");
					this.OnStoreVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StoreRemind", Storage="_Store", ThisKey="StoreID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.StoreRemind.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.StoreRemind.Add(this);
						this._StoreID = value.ID;
					}
					else
					{
						this._StoreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreVisit_StoreRemind", Storage="_StoreVisit", ThisKey="StoreVisitID", OtherKey="ID", IsForeignKey=true)]
		public StoreVisit StoreVisit
		{
			get
			{
				return this._StoreVisit.Entity;
			}
			set
			{
				StoreVisit previousValue = this._StoreVisit.Entity;
				if (((previousValue != value) 
							|| (this._StoreVisit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreVisit.Entity = null;
						previousValue.StoreRemind.Remove(this);
					}
					this._StoreVisit.Entity = value;
					if ((value != null))
					{
						value.StoreRemind.Add(this);
						this._StoreVisitID = value.ID;
					}
					else
					{
						this._StoreVisitID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreVisit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreVisit")]
	public partial class StoreVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IsNeed;
		
		private System.Nullable<int> _IsAgain;
		
		private string _NextTime;
		
		private string _VisitTime;
		
		private string _VisitContent;
		
		private string _VisitImg;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _StoreID;
		
		private string _AddTime;
		
		private EntitySet<StoreRemind> _StoreRemind;
		
		private EntityRef<Store> _Store;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsNeedChanging(System.Nullable<int> value);
    partial void OnIsNeedChanged();
    partial void OnIsAgainChanging(System.Nullable<int> value);
    partial void OnIsAgainChanged();
    partial void OnNextTimeChanging(string value);
    partial void OnNextTimeChanged();
    partial void OnVisitTimeChanging(string value);
    partial void OnVisitTimeChanged();
    partial void OnVisitContentChanging(string value);
    partial void OnVisitContentChanged();
    partial void OnVisitImgChanging(string value);
    partial void OnVisitImgChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    #endregion
		
		public StoreVisit()
		{
			this._StoreRemind = new EntitySet<StoreRemind>(new Action<StoreRemind>(this.attach_StoreRemind), new Action<StoreRemind>(this.detach_StoreRemind));
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeed", DbType="Int")]
		public System.Nullable<int> IsNeed
		{
			get
			{
				return this._IsNeed;
			}
			set
			{
				if ((this._IsNeed != value))
				{
					this.OnIsNeedChanging(value);
					this.SendPropertyChanging();
					this._IsNeed = value;
					this.SendPropertyChanged("IsNeed");
					this.OnIsNeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgain", DbType="Int")]
		public System.Nullable<int> IsAgain
		{
			get
			{
				return this._IsAgain;
			}
			set
			{
				if ((this._IsAgain != value))
				{
					this.OnIsAgainChanging(value);
					this.SendPropertyChanging();
					this._IsAgain = value;
					this.SendPropertyChanged("IsAgain");
					this.OnIsAgainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextTime", DbType="NVarChar(50)")]
		public string NextTime
		{
			get
			{
				return this._NextTime;
			}
			set
			{
				if ((this._NextTime != value))
				{
					this.OnNextTimeChanging(value);
					this.SendPropertyChanging();
					this._NextTime = value;
					this.SendPropertyChanged("NextTime");
					this.OnNextTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTime", DbType="NVarChar(50)")]
		public string VisitTime
		{
			get
			{
				return this._VisitTime;
			}
			set
			{
				if ((this._VisitTime != value))
				{
					this.OnVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._VisitTime = value;
					this.SendPropertyChanged("VisitTime");
					this.OnVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitContent", DbType="NVarChar(MAX)")]
		public string VisitContent
		{
			get
			{
				return this._VisitContent;
			}
			set
			{
				if ((this._VisitContent != value))
				{
					this.OnVisitContentChanging(value);
					this.SendPropertyChanging();
					this._VisitContent = value;
					this.SendPropertyChanged("VisitContent");
					this.OnVisitContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitImg", DbType="NVarChar(MAX)")]
		public string VisitImg
		{
			get
			{
				return this._VisitImg;
			}
			set
			{
				if ((this._VisitImg != value))
				{
					this.OnVisitImgChanging(value);
					this.SendPropertyChanging();
					this._VisitImg = value;
					this.SendPropertyChanged("VisitImg");
					this.OnVisitImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreVisit_StoreRemind", Storage="_StoreRemind", ThisKey="ID", OtherKey="StoreVisitID")]
		public EntitySet<StoreRemind> StoreRemind
		{
			get
			{
				return this._StoreRemind;
			}
			set
			{
				this._StoreRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StoreVisit", Storage="_Store", ThisKey="StoreID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.StoreVisit.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.StoreVisit.Add(this);
						this._StoreID = value.ID;
					}
					else
					{
						this._StoreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreRemind(StoreRemind entity)
		{
			this.SendPropertyChanging();
			entity.StoreVisit = this;
		}
		
		private void detach_StoreRemind(StoreRemind entity)
		{
			this.SendPropertyChanging();
			entity.StoreVisit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Mobile;
		
		private string _Pwd;
		
		private string _Areas;
		
		private string _Grids;
		
		private string _Post;
		
		private System.Nullable<int> _RoleID;
		
		private string _AddTime;
		
		private string _Remark;
		
		private string _HeadImg;
		
		private EntitySet<Visit> _Visit;
		
		private EntitySet<Business> _Business;
		
		private EntitySet<BusRemind> _BusRemind;
		
		private EntitySet<PrivateLine> _PrivateLine;
		
		private EntitySet<Project> _Project;
		
		private EntitySet<ProRemind> _ProRemind;
		
		private EntitySet<ProVisit> _ProVisit;
		
		private EntitySet<SmallBalance> _SmallBalance;
		
		private EntitySet<Store> _Store;
		
		private EntitySet<Arrears> _Arrears;
		
		private EntitySet<ArrRead> _ArrRead;
		
		private EntityRef<Roles> _Roles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnAreasChanging(string value);
    partial void OnAreasChanged();
    partial void OnGridsChanging(string value);
    partial void OnGridsChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnHeadImgChanging(string value);
    partial void OnHeadImgChanged();
    #endregion
		
		public Users()
		{
			this._Visit = new EntitySet<Visit>(new Action<Visit>(this.attach_Visit), new Action<Visit>(this.detach_Visit));
			this._Business = new EntitySet<Business>(new Action<Business>(this.attach_Business), new Action<Business>(this.detach_Business));
			this._BusRemind = new EntitySet<BusRemind>(new Action<BusRemind>(this.attach_BusRemind), new Action<BusRemind>(this.detach_BusRemind));
			this._PrivateLine = new EntitySet<PrivateLine>(new Action<PrivateLine>(this.attach_PrivateLine), new Action<PrivateLine>(this.detach_PrivateLine));
			this._Project = new EntitySet<Project>(new Action<Project>(this.attach_Project), new Action<Project>(this.detach_Project));
			this._ProRemind = new EntitySet<ProRemind>(new Action<ProRemind>(this.attach_ProRemind), new Action<ProRemind>(this.detach_ProRemind));
			this._ProVisit = new EntitySet<ProVisit>(new Action<ProVisit>(this.attach_ProVisit), new Action<ProVisit>(this.detach_ProVisit));
			this._SmallBalance = new EntitySet<SmallBalance>(new Action<SmallBalance>(this.attach_SmallBalance), new Action<SmallBalance>(this.detach_SmallBalance));
			this._Store = new EntitySet<Store>(new Action<Store>(this.attach_Store), new Action<Store>(this.detach_Store));
			this._Arrears = new EntitySet<Arrears>(new Action<Arrears>(this.attach_Arrears), new Action<Arrears>(this.detach_Arrears));
			this._ArrRead = new EntitySet<ArrRead>(new Action<ArrRead>(this.attach_ArrRead), new Action<ArrRead>(this.detach_ArrRead));
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(50)")]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this.OnPwdChanging(value);
					this.SendPropertyChanging();
					this._Pwd = value;
					this.SendPropertyChanged("Pwd");
					this.OnPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Areas", DbType="NVarChar(50)")]
		public string Areas
		{
			get
			{
				return this._Areas;
			}
			set
			{
				if ((this._Areas != value))
				{
					this.OnAreasChanging(value);
					this.SendPropertyChanging();
					this._Areas = value;
					this.SendPropertyChanged("Areas");
					this.OnAreasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grids", DbType="NVarChar(50)")]
		public string Grids
		{
			get
			{
				return this._Grids;
			}
			set
			{
				if ((this._Grids != value))
				{
					this.OnGridsChanging(value);
					this.SendPropertyChanging();
					this._Grids = value;
					this.SendPropertyChanged("Grids");
					this.OnGridsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(50)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadImg", DbType="NVarChar(MAX)")]
		public string HeadImg
		{
			get
			{
				return this._HeadImg;
			}
			set
			{
				if ((this._HeadImg != value))
				{
					this.OnHeadImgChanging(value);
					this.SendPropertyChanging();
					this._HeadImg = value;
					this.SendPropertyChanged("HeadImg");
					this.OnHeadImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Visit", Storage="_Visit", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Visit> Visit
		{
			get
			{
				return this._Visit;
			}
			set
			{
				this._Visit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Business", Storage="_Business", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Business> Business
		{
			get
			{
				return this._Business;
			}
			set
			{
				this._Business.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_BusRemind", Storage="_BusRemind", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<BusRemind> BusRemind
		{
			get
			{
				return this._BusRemind;
			}
			set
			{
				this._BusRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_PrivateLine", Storage="_PrivateLine", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<PrivateLine> PrivateLine
		{
			get
			{
				return this._PrivateLine;
			}
			set
			{
				this._PrivateLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Project", Storage="_Project", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Project> Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				this._Project.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_ProRemind", Storage="_ProRemind", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ProRemind> ProRemind
		{
			get
			{
				return this._ProRemind;
			}
			set
			{
				this._ProRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_ProVisit", Storage="_ProVisit", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ProVisit> ProVisit
		{
			get
			{
				return this._ProVisit;
			}
			set
			{
				this._ProVisit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_SmallBalance", Storage="_SmallBalance", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<SmallBalance> SmallBalance
		{
			get
			{
				return this._SmallBalance;
			}
			set
			{
				this._SmallBalance.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Store", Storage="_Store", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Store> Store
		{
			get
			{
				return this._Store;
			}
			set
			{
				this._Store.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Arrears", Storage="_Arrears", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Arrears> Arrears
		{
			get
			{
				return this._Arrears;
			}
			set
			{
				this._Arrears.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_ArrRead", Storage="_ArrRead", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ArrRead> ArrRead
		{
			get
			{
				return this._ArrRead;
			}
			set
			{
				this._ArrRead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Users", Storage="_Roles", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visit(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Visit(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_Business(Business entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Business(Business entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_BusRemind(BusRemind entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_BusRemind(BusRemind entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_PrivateLine(PrivateLine entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_PrivateLine(PrivateLine entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_Project(Project entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Project(Project entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_ProRemind(ProRemind entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_ProRemind(ProRemind entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_ProVisit(ProVisit entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_ProVisit(ProVisit entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_SmallBalance(SmallBalance entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_SmallBalance(SmallBalance entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_Store(Store entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Store(Store entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_Arrears(Arrears entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Arrears(Arrears entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_ArrRead(ArrRead entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_ArrRead(ArrRead entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Version")]
	public partial class Version : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _VersionType;
		
		private string _VersionName;
		
		private string _DownUrl;
		
		private string _VersionInfo;
		
		private System.Nullable<int> _IsForced;
		
		private System.Nullable<int> _VersionCode;
		
		private System.Nullable<System.DateTime> _AddTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVersionTypeChanging(System.Nullable<int> value);
    partial void OnVersionTypeChanged();
    partial void OnVersionNameChanging(string value);
    partial void OnVersionNameChanged();
    partial void OnDownUrlChanging(string value);
    partial void OnDownUrlChanged();
    partial void OnVersionInfoChanging(string value);
    partial void OnVersionInfoChanged();
    partial void OnIsForcedChanging(System.Nullable<int> value);
    partial void OnIsForcedChanged();
    partial void OnVersionCodeChanging(System.Nullable<int> value);
    partial void OnVersionCodeChanged();
    partial void OnAddTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAddTimeChanged();
    #endregion
		
		public Version()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionType", DbType="Int")]
		public System.Nullable<int> VersionType
		{
			get
			{
				return this._VersionType;
			}
			set
			{
				if ((this._VersionType != value))
				{
					this.OnVersionTypeChanging(value);
					this.SendPropertyChanging();
					this._VersionType = value;
					this.SendPropertyChanged("VersionType");
					this.OnVersionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionName", DbType="NVarChar(50)")]
		public string VersionName
		{
			get
			{
				return this._VersionName;
			}
			set
			{
				if ((this._VersionName != value))
				{
					this.OnVersionNameChanging(value);
					this.SendPropertyChanging();
					this._VersionName = value;
					this.SendPropertyChanged("VersionName");
					this.OnVersionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownUrl", DbType="NVarChar(200)")]
		public string DownUrl
		{
			get
			{
				return this._DownUrl;
			}
			set
			{
				if ((this._DownUrl != value))
				{
					this.OnDownUrlChanging(value);
					this.SendPropertyChanging();
					this._DownUrl = value;
					this.SendPropertyChanged("DownUrl");
					this.OnDownUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionInfo", DbType="NVarChar(500)")]
		public string VersionInfo
		{
			get
			{
				return this._VersionInfo;
			}
			set
			{
				if ((this._VersionInfo != value))
				{
					this.OnVersionInfoChanging(value);
					this.SendPropertyChanging();
					this._VersionInfo = value;
					this.SendPropertyChanged("VersionInfo");
					this.OnVersionInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForced", DbType="Int")]
		public System.Nullable<int> IsForced
		{
			get
			{
				return this._IsForced;
			}
			set
			{
				if ((this._IsForced != value))
				{
					this.OnIsForcedChanging(value);
					this.SendPropertyChanging();
					this._IsForced = value;
					this.SendPropertyChanged("IsForced");
					this.OnIsForcedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCode", DbType="Int")]
		public System.Nullable<int> VersionCode
		{
			get
			{
				return this._VersionCode;
			}
			set
			{
				if ((this._VersionCode != value))
				{
					this.OnVersionCodeChanging(value);
					this.SendPropertyChanging();
					this._VersionCode = value;
					this.SendPropertyChanged("VersionCode");
					this.OnVersionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VPLVisitNum")]
	public partial class VPLVisitNum
	{
		
		private System.Nullable<int> _PlID;
		
		private System.Nullable<int> _num;
		
		public VPLVisitNum()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlID", DbType="Int")]
		public System.Nullable<int> PlID
		{
			get
			{
				return this._PlID;
			}
			set
			{
				if ((this._PlID != value))
				{
					this._PlID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
		public System.Nullable<int> num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this._num = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VVisitNum")]
	public partial class VVisitNum
	{
		
		private System.Nullable<int> _BusID;
		
		private System.Nullable<int> _num;
		
		public VVisitNum()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusID", DbType="Int")]
		public System.Nullable<int> BusID
		{
			get
			{
				return this._BusID;
			}
			set
			{
				if ((this._BusID != value))
				{
					this._BusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
		public System.Nullable<int> num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this._num = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlInfo")]
	public partial class PlInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Operator;
		
		private string _WeekPrice;
		
		private string _BandWidth;
		
		private string _PayType;
		
		private string _OverTime;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _PlID;
		
		private System.Nullable<int> _Type;
		
		private string _ServerBerSys;
		
		private string _ServerUsingTime;
		
		private System.Nullable<int> _IsCloudPlan;
		
		private EntitySet<PlRemind> _PlRemind;
		
		private EntityRef<PrivateLine> _PrivateLine;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnWeekPriceChanging(string value);
    partial void OnWeekPriceChanged();
    partial void OnBandWidthChanging(string value);
    partial void OnBandWidthChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    partial void OnOverTimeChanging(string value);
    partial void OnOverTimeChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnPlIDChanging(System.Nullable<int> value);
    partial void OnPlIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnServerBerSysChanging(string value);
    partial void OnServerBerSysChanged();
    partial void OnServerUsingTimeChanging(string value);
    partial void OnServerUsingTimeChanged();
    partial void OnIsCloudPlanChanging(System.Nullable<int> value);
    partial void OnIsCloudPlanChanged();
    #endregion
		
		public PlInfo()
		{
			this._PlRemind = new EntitySet<PlRemind>(new Action<PlRemind>(this.attach_PlRemind), new Action<PlRemind>(this.detach_PlRemind));
			this._PrivateLine = default(EntityRef<PrivateLine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="NVarChar(50)")]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekPrice", DbType="NVarChar(50)")]
		public string WeekPrice
		{
			get
			{
				return this._WeekPrice;
			}
			set
			{
				if ((this._WeekPrice != value))
				{
					this.OnWeekPriceChanging(value);
					this.SendPropertyChanging();
					this._WeekPrice = value;
					this.SendPropertyChanged("WeekPrice");
					this.OnWeekPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BandWidth", DbType="NVarChar(50)")]
		public string BandWidth
		{
			get
			{
				return this._BandWidth;
			}
			set
			{
				if ((this._BandWidth != value))
				{
					this.OnBandWidthChanging(value);
					this.SendPropertyChanging();
					this._BandWidth = value;
					this.SendPropertyChanged("BandWidth");
					this.OnBandWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(50)")]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverTime", DbType="NVarChar(50)")]
		public string OverTime
		{
			get
			{
				return this._OverTime;
			}
			set
			{
				if ((this._OverTime != value))
				{
					this.OnOverTimeChanging(value);
					this.SendPropertyChanging();
					this._OverTime = value;
					this.SendPropertyChanged("OverTime");
					this.OnOverTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlID", DbType="Int")]
		public System.Nullable<int> PlID
		{
			get
			{
				return this._PlID;
			}
			set
			{
				if ((this._PlID != value))
				{
					if (this._PrivateLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlIDChanging(value);
					this.SendPropertyChanging();
					this._PlID = value;
					this.SendPropertyChanged("PlID");
					this.OnPlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerBerSys", DbType="NVarChar(50)")]
		public string ServerBerSys
		{
			get
			{
				return this._ServerBerSys;
			}
			set
			{
				if ((this._ServerBerSys != value))
				{
					this.OnServerBerSysChanging(value);
					this.SendPropertyChanging();
					this._ServerBerSys = value;
					this.SendPropertyChanged("ServerBerSys");
					this.OnServerBerSysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerUsingTime", DbType="NVarChar(50)")]
		public string ServerUsingTime
		{
			get
			{
				return this._ServerUsingTime;
			}
			set
			{
				if ((this._ServerUsingTime != value))
				{
					this.OnServerUsingTimeChanging(value);
					this.SendPropertyChanging();
					this._ServerUsingTime = value;
					this.SendPropertyChanged("ServerUsingTime");
					this.OnServerUsingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCloudPlan", DbType="Int")]
		public System.Nullable<int> IsCloudPlan
		{
			get
			{
				return this._IsCloudPlan;
			}
			set
			{
				if ((this._IsCloudPlan != value))
				{
					this.OnIsCloudPlanChanging(value);
					this.SendPropertyChanging();
					this._IsCloudPlan = value;
					this.SendPropertyChanged("IsCloudPlan");
					this.OnIsCloudPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlInfo_PlRemind", Storage="_PlRemind", ThisKey="ID", OtherKey="PlInfoID")]
		public EntitySet<PlRemind> PlRemind
		{
			get
			{
				return this._PlRemind;
			}
			set
			{
				this._PlRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivateLine_PlInfo", Storage="_PrivateLine", ThisKey="PlID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PrivateLine PrivateLine
		{
			get
			{
				return this._PrivateLine.Entity;
			}
			set
			{
				PrivateLine previousValue = this._PrivateLine.Entity;
				if (((previousValue != value) 
							|| (this._PrivateLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrivateLine.Entity = null;
						previousValue.PlInfo.Remove(this);
					}
					this._PrivateLine.Entity = value;
					if ((value != null))
					{
						value.PlInfo.Add(this);
						this._PlID = value.ID;
					}
					else
					{
						this._PlID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrivateLine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlRemind(PlRemind entity)
		{
			this.SendPropertyChanging();
			entity.PlInfo = this;
		}
		
		private void detach_PlRemind(PlRemind entity)
		{
			this.SendPropertyChanging();
			entity.PlInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Arrears")]
	public partial class Arrears : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserNumber;
		
		private string _CustomerName;
		
		private string _InNetTime;
		
		private string _UserTypeItem;
		
		private string _Period;
		
		private string _InstalledAddress;
		
		private string _ContactTel;
		
		private string _ServiceStatus;
		
		private System.Nullable<decimal> _AmountOwed;
		
		private string _Payment;
		
		private System.Nullable<int> _UserID;
		
		private string _Area;
		
		private System.Nullable<int> _State;
		
		private string _AddTime;
		
		private EntitySet<ArrRemind> _ArrRemind;
		
		private EntitySet<ArrRead> _ArrRead;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNumberChanging(string value);
    partial void OnUserNumberChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnInNetTimeChanging(string value);
    partial void OnInNetTimeChanged();
    partial void OnUserTypeItemChanging(string value);
    partial void OnUserTypeItemChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnInstalledAddressChanging(string value);
    partial void OnInstalledAddressChanged();
    partial void OnContactTelChanging(string value);
    partial void OnContactTelChanged();
    partial void OnServiceStatusChanging(string value);
    partial void OnServiceStatusChanged();
    partial void OnAmountOwedChanging(System.Nullable<decimal> value);
    partial void OnAmountOwedChanged();
    partial void OnPaymentChanging(string value);
    partial void OnPaymentChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    #endregion
		
		public Arrears()
		{
			this._ArrRemind = new EntitySet<ArrRemind>(new Action<ArrRemind>(this.attach_ArrRemind), new Action<ArrRemind>(this.detach_ArrRemind));
			this._ArrRead = new EntitySet<ArrRead>(new Action<ArrRead>(this.attach_ArrRead), new Action<ArrRead>(this.detach_ArrRead));
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNumber", DbType="NVarChar(50)")]
		public string UserNumber
		{
			get
			{
				return this._UserNumber;
			}
			set
			{
				if ((this._UserNumber != value))
				{
					this.OnUserNumberChanging(value);
					this.SendPropertyChanging();
					this._UserNumber = value;
					this.SendPropertyChanged("UserNumber");
					this.OnUserNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InNetTime", DbType="NVarChar(50)")]
		public string InNetTime
		{
			get
			{
				return this._InNetTime;
			}
			set
			{
				if ((this._InNetTime != value))
				{
					this.OnInNetTimeChanging(value);
					this.SendPropertyChanging();
					this._InNetTime = value;
					this.SendPropertyChanged("InNetTime");
					this.OnInNetTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeItem", DbType="NVarChar(200)")]
		public string UserTypeItem
		{
			get
			{
				return this._UserTypeItem;
			}
			set
			{
				if ((this._UserTypeItem != value))
				{
					this.OnUserTypeItemChanging(value);
					this.SendPropertyChanging();
					this._UserTypeItem = value;
					this.SendPropertyChanged("UserTypeItem");
					this.OnUserTypeItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="NVarChar(50)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalledAddress", DbType="NVarChar(500)")]
		public string InstalledAddress
		{
			get
			{
				return this._InstalledAddress;
			}
			set
			{
				if ((this._InstalledAddress != value))
				{
					this.OnInstalledAddressChanging(value);
					this.SendPropertyChanging();
					this._InstalledAddress = value;
					this.SendPropertyChanged("InstalledAddress");
					this.OnInstalledAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTel", DbType="NVarChar(50)")]
		public string ContactTel
		{
			get
			{
				return this._ContactTel;
			}
			set
			{
				if ((this._ContactTel != value))
				{
					this.OnContactTelChanging(value);
					this.SendPropertyChanging();
					this._ContactTel = value;
					this.SendPropertyChanged("ContactTel");
					this.OnContactTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceStatus", DbType="NVarChar(50)")]
		public string ServiceStatus
		{
			get
			{
				return this._ServiceStatus;
			}
			set
			{
				if ((this._ServiceStatus != value))
				{
					this.OnServiceStatusChanging(value);
					this.SendPropertyChanging();
					this._ServiceStatus = value;
					this.SendPropertyChanged("ServiceStatus");
					this.OnServiceStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountOwed", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountOwed
		{
			get
			{
				return this._AmountOwed;
			}
			set
			{
				if ((this._AmountOwed != value))
				{
					this.OnAmountOwedChanging(value);
					this.SendPropertyChanging();
					this._AmountOwed = value;
					this.SendPropertyChanged("AmountOwed");
					this.OnAmountOwedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="NVarChar(50)")]
		public string Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(50)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrears_ArrRemind", Storage="_ArrRemind", ThisKey="ID", OtherKey="ArrID")]
		public EntitySet<ArrRemind> ArrRemind
		{
			get
			{
				return this._ArrRemind;
			}
			set
			{
				this._ArrRemind.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrears_ArrRead", Storage="_ArrRead", ThisKey="ID", OtherKey="ArrID")]
		public EntitySet<ArrRead> ArrRead
		{
			get
			{
				return this._ArrRead;
			}
			set
			{
				this._ArrRead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Arrears", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Arrears.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Arrears.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArrRemind(ArrRemind entity)
		{
			this.SendPropertyChanging();
			entity.Arrears = this;
		}
		
		private void detach_ArrRemind(ArrRemind entity)
		{
			this.SendPropertyChanging();
			entity.Arrears = null;
		}
		
		private void attach_ArrRead(ArrRead entity)
		{
			this.SendPropertyChanging();
			entity.Arrears = this;
		}
		
		private void detach_ArrRead(ArrRead entity)
		{
			this.SendPropertyChanging();
			entity.Arrears = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArrRemind")]
	public partial class ArrRemind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ReceiptTime;
		
		private string _AddTime;
		
		private string _ReceiptContent;
		
		private System.Nullable<int> _ArrID;
		
		private System.Nullable<int> _State;
		
		private EntityRef<Arrears> _Arrears;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReceiptTimeChanging(string value);
    partial void OnReceiptTimeChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnReceiptContentChanging(string value);
    partial void OnReceiptContentChanged();
    partial void OnArrIDChanging(System.Nullable<int> value);
    partial void OnArrIDChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    #endregion
		
		public ArrRemind()
		{
			this._Arrears = default(EntityRef<Arrears>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTime", DbType="NVarChar(50)")]
		public string ReceiptTime
		{
			get
			{
				return this._ReceiptTime;
			}
			set
			{
				if ((this._ReceiptTime != value))
				{
					this.OnReceiptTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTime = value;
					this.SendPropertyChanged("ReceiptTime");
					this.OnReceiptTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptContent", DbType="NVarChar(50)")]
		public string ReceiptContent
		{
			get
			{
				return this._ReceiptContent;
			}
			set
			{
				if ((this._ReceiptContent != value))
				{
					this.OnReceiptContentChanging(value);
					this.SendPropertyChanging();
					this._ReceiptContent = value;
					this.SendPropertyChanged("ReceiptContent");
					this.OnReceiptContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrID", DbType="Int")]
		public System.Nullable<int> ArrID
		{
			get
			{
				return this._ArrID;
			}
			set
			{
				if ((this._ArrID != value))
				{
					if (this._Arrears.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrIDChanging(value);
					this.SendPropertyChanging();
					this._ArrID = value;
					this.SendPropertyChanged("ArrID");
					this.OnArrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrears_ArrRemind", Storage="_Arrears", ThisKey="ArrID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Arrears Arrears
		{
			get
			{
				return this._Arrears.Entity;
			}
			set
			{
				Arrears previousValue = this._Arrears.Entity;
				if (((previousValue != value) 
							|| (this._Arrears.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Arrears.Entity = null;
						previousValue.ArrRemind.Remove(this);
					}
					this._Arrears.Entity = value;
					if ((value != null))
					{
						value.ArrRemind.Add(this);
						this._ArrID = value.ID;
					}
					else
					{
						this._ArrID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Arrears");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArrRead")]
	public partial class ArrRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ArrID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _IsRead;
		
		private EntityRef<Arrears> _Arrears;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArrIDChanging(System.Nullable<int> value);
    partial void OnArrIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsReadChanging(System.Nullable<int> value);
    partial void OnIsReadChanged();
    #endregion
		
		public ArrRead()
		{
			this._Arrears = default(EntityRef<Arrears>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrID", DbType="Int")]
		public System.Nullable<int> ArrID
		{
			get
			{
				return this._ArrID;
			}
			set
			{
				if ((this._ArrID != value))
				{
					if (this._Arrears.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrIDChanging(value);
					this.SendPropertyChanging();
					this._ArrID = value;
					this.SendPropertyChanged("ArrID");
					this.OnArrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Int")]
		public System.Nullable<int> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrears_ArrRead", Storage="_Arrears", ThisKey="ArrID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Arrears Arrears
		{
			get
			{
				return this._Arrears.Entity;
			}
			set
			{
				Arrears previousValue = this._Arrears.Entity;
				if (((previousValue != value) 
							|| (this._Arrears.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Arrears.Entity = null;
						previousValue.ArrRead.Remove(this);
					}
					this._Arrears.Entity = value;
					if ((value != null))
					{
						value.ArrRead.Add(this);
						this._ArrID = value.ID;
					}
					else
					{
						this._ArrID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Arrears");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_ArrRead", Storage="_Users", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.ArrRead.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.ArrRead.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
